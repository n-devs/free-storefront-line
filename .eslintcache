[{"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/rootReducer.js":"1","/Users/n.devs/Desktop/develop/line-login-react/src/views/SettingView/index.js":"2","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogChangNumberPhone/index.js":"3","/Users/n.devs/Desktop/develop/line-login-react/src/App.js":"4","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/userReducer.js":"5","/Users/n.devs/Desktop/develop/line-login-react/src/views/NotFoundLIFFIDView/index.js":"6","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/authReducer.js":"7","/Users/n.devs/Desktop/develop/line-login-react/src/views/LiffRedirectUriView/index.js":"8","/Users/n.devs/Desktop/develop/line-login-react/src/views/SetupView/index.js":"9","/Users/n.devs/Desktop/develop/line-login-react/src/index.js":"10","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/todoReducer.js":"11","/Users/n.devs/Desktop/develop/line-login-react/src/components/Loading/index.js":"12","/Users/n.devs/Desktop/develop/line-login-react/src/views/AddressView/index.js":"13","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/controlReducer.js":"14","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddAddress/index.js":"15","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/addressReducer.js":"16","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateAddress/index.js":"17","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteAddress/index.js":"18","/Users/n.devs/Desktop/develop/line-login-react/src/views/AddProductView/index.js":"19","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/productReducer.js":"20","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddProduct/index.js":"21","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateProduct/index.js":"22","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteProduct/index.js":"23","/Users/n.devs/Desktop/develop/line-login-react/src/views/ProductView/index.js":"24","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/orderReducer.js":"25","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogListOrder/index.js":"26","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogSelectAddress/index.js":"27","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogBuyProduct/index.js":"28","/Users/n.devs/Desktop/develop/line-login-react/src/firebase.config.js":"29"},{"size":561,"mtime":1612031212236,"results":"30","hashOfConfig":"31"},{"size":6819,"mtime":1612002000010,"results":"32","hashOfConfig":"31"},{"size":3217,"mtime":1611960826557,"results":"33","hashOfConfig":"31"},{"size":4078,"mtime":1612037892987,"results":"34","hashOfConfig":"31"},{"size":899,"mtime":1612051333248,"results":"35","hashOfConfig":"31"},{"size":174,"mtime":1611947957921,"results":"36","hashOfConfig":"31"},{"size":692,"mtime":1611991693677,"results":"37","hashOfConfig":"31"},{"size":3590,"mtime":1611999369277,"results":"38","hashOfConfig":"31"},{"size":8942,"mtime":1612000748954,"results":"39","hashOfConfig":"31"},{"size":655,"mtime":1611940171038,"results":"40","hashOfConfig":"31"},{"size":767,"mtime":1611940063177,"results":"41","hashOfConfig":"31"},{"size":338,"mtime":1611936984428,"results":"42","hashOfConfig":"31"},{"size":5601,"mtime":1612029330162,"results":"43","hashOfConfig":"31"},{"size":2030,"mtime":1612046930661,"results":"44","hashOfConfig":"31"},{"size":7845,"mtime":1612024052414,"results":"45","hashOfConfig":"31"},{"size":1755,"mtime":1612030586329,"results":"46","hashOfConfig":"31"},{"size":9430,"mtime":1612036048121,"results":"47","hashOfConfig":"31"},{"size":3545,"mtime":1612036405840,"results":"48","hashOfConfig":"31"},{"size":5911,"mtime":1612036532256,"results":"49","hashOfConfig":"31"},{"size":2190,"mtime":1612034666772,"results":"50","hashOfConfig":"31"},{"size":10289,"mtime":1612034502694,"results":"51","hashOfConfig":"31"},{"size":11862,"mtime":1612036651425,"results":"52","hashOfConfig":"31"},{"size":4124,"mtime":1612036761409,"results":"53","hashOfConfig":"31"},{"size":6578,"mtime":1612047286372,"results":"54","hashOfConfig":"31"},{"size":750,"mtime":1612045035045,"results":"55","hashOfConfig":"31"},{"size":4767,"mtime":1612042834517,"results":"56","hashOfConfig":"31"},{"size":5789,"mtime":1612051217800,"results":"57","hashOfConfig":"31"},{"size":7160,"mtime":1612051213434,"results":"58","hashOfConfig":"31"},{"size":636,"mtime":1612051539496,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zqtubk",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/rootReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/SettingView/index.js",["124","125"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogChangNumberPhone/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/App.js",["126","127"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/userReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/NotFoundLIFFIDView/index.js",[],["128","129"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/authReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/LiffRedirectUriView/index.js",["130","131","132"],"/Users/n.devs/Desktop/develop/line-login-react/src/views/SetupView/index.js",["133"],"import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport NumberPhoneInput from '../../components/NumberPhoneInput';\nimport { useHistory } from 'react-router-dom';\nimport liff from \"@line/liff\";\nimport Loading from '../../components/Loading';\nimport { Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\n\nfunction SetupView() {\n    const [loading, setLoading] = React.useState(true);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const auth = useSelector(state => state.auth);\n    // const [status,setStatus] = React.useState(false)\n    const history = useHistory();\n    const handleChange = (prop) => (event) => {\n        dispatch({ type: \"USER_NUMBER_PHONE\", payload: event.target.value })\n    };\n    const appRef = fireStore.collection(\"line_apps\");\n\n    async function Update() {\n        await appRef.doc(parsed.liff_id).collection(\"users\").doc(user.userId).update({\n            userId: user.userId,\n            displayName: user.displayName,\n            pictureUrl: user.pictureUrl,\n            numberPhone: user.numberPhone\n        }).then(function () {\n            dispatch({ type: \"AUTH_STATUS\", payload: true });\n            history.push(`${parsed.pathname}?liff_id=${parsed.liff_id}`)\n        });\n\n    }\n    React.useEffect(() => {\n        const appRef = fireStore.collection(\"line_apps\");\n        if (sessionStorage.getItem(\"liff_id\")) {\n            liff.init({ liffId: `${sessionStorage.getItem(\"liff_id\")}` }).then(async () => {\n\n                if (liff.isLoggedIn()) {\n                    const getProfile = await liff.getProfile();\n                    console.log(getProfile);\n\n                    const userId = await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).get();\n\n                    if (!userId.exists) {\n                        console.log(\"No such document!\");\n                        dispatch({ type: \"AUTH_STATUS\", payload: false })\n                        dispatch({ type: \"USER_DISPLAY_NAME\", payload: getProfile.displayName });\n                        dispatch({ type: \"USER_ID\", payload: getProfile.userId });\n                        dispatch({ type: \"USER_PICTURE_URL\", payload: getProfile.pictureUrl });\n                        await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).set({ ...getProfile })\n\n                    } else {\n                       \n                        console.log(\"getProfile line:\", getProfile);\n                        if (userId.data().numberPhone) {\n                            console.log(\"Document data:\", userId.data());\n                            dispatch({ type: \"AUTH_STATUS\", payload: true })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            dispatch({ type: \"USER_NUMBER_PHONE\", payload: userId.data().numberPhone })\n                            setLoading(false)\n                            // setStatus(auth.status)\n                        } else {\n                            dispatch({ type: \"AUTH_STATUS\", payload: false })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            setLoading(false)\n                        }\n                    }\n                } else {\n                    dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n\n                    liff.login({ redirectUri: `${window.location.href}` });\n                    console.log(\"a\");\n                }\n\n            }).catch(err => { throw err });\n        } else {\n            // setLoading(false)\n            console.log(\"b\");\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n        }\n    }, [auth.status])\n\n    return (\n        <div>\n            {loading ? (<React.Fragment>\n                <Loading></Loading>\n            </React.Fragment>) : (<React.Fragment>\n                {auth.status ? (<React.Fragment>\n                    <Redirect to={`${parsed.pathname}?liff_id=${parsed.liff_id}`}></Redirect>\n                </React.Fragment>) : (<React.Fragment>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.app}\n                    >\n                        <Grid item xs={12}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item xs={12}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <Avatar alt={user.displayName} src={user.pictureUrl} className={classes.avatars} />\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                    >\n                                        <Typography variant=\"h6\" component=\"h6\">\n                                            {user.displayName}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <label htmlFor=\"phone\">{\"ลงทะเบียนหมายเลขโทรศัพท์:\"}</label>\n                                        <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" onChange={handleChange()}></NumberPhoneInput>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12}></Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                        <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Update}>\n                            {\"เพิ่มหมายเลขโทรศัพท์\"}\n                        </Button>\n                    </AppBar>\n                </React.Fragment>)}\n\n            </React.Fragment>)}\n\n        </div>\n    )\n};\n\nexport default SetupView;","/Users/n.devs/Desktop/develop/line-login-react/src/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/todoReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/Loading/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/AddressView/index.js",["134","135","136","137","138","139","140","141"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/controlReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddAddress/index.js",["142","143","144","145","146"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogAddAddress() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const address = useSelector(state => state.address);\n    const user = useSelector(state => state.user);\n    const appRef = fireStore.collection(\"line_apps\");\n    const parsed = queryString.parse(window.location.search);\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_ADDRESS\", payload: !control.openDialogAddAddress })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"ADDRESS_ADD_NAME\", payload: event.target.value })\n                break;\n            case \"numberPhone\":\n                dispatch({ type: \"ADDRESS_ADD_NUMBER_PHONE\", payload: event.target.value })\n                break;\n            case \"address\":\n                dispatch({ type: \"ADDRESS_ADD_ADDRESS\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const arr = address.storage;\n\n\n\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").doc();\n        await addressRef.set({\n            id: addressRef.id,\n            name: address.addName,\n            numberPhone: address.addNumbeerPhone,\n            address: address.addAddress\n        }).then(function () {\n            arr.push({\n                id: addressRef.id,\n                name: address.addName,\n                numberPhone: address.addNumbeerPhone,\n                address: address.addAddress\n            })\n\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: arr });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_ADDRESS\", payload: !control.openDialogAddAddress })\n\n\n\n\n        });\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogAddAddress} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เพิ่มที่อยู่จัดส่ง\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ผู้รับ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกชื่อผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"หมายเลขโทรศัพท์มือถือ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกหมายเลขโทรศัพท์มือถือผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"numberPhone\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ที่อยู่จัดส่ง\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    rows={4}\n                                    multiline\n                                    placeholder=\"โปรดกรอกรายละเอียดที่อยู่ เช่นบ้านเลขที่ หมู่บ้าน ถนน เขต ตำบล อำเภอ จังหวัด รหัสไปรษณีย์ \"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"address\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Add}>\n                    {\"บันทึก\"}\n                </Button>\n            </AppBar>\n        </Dialog>\n    );\n}\n","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/addressReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateAddress/index.js",["147","148","149"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteAddress/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/AddProductView/index.js",["150","151"],"import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport DialogAddProduct from '../../components/DialogAddProduct'\nimport DialogUpdateProduct from '../../components/DialogUpdateProduct'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\n// function TransitionDown(props) {\n//     return <Slide {...props} direction=\"down\" />;\n// }\n\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nfunction AddProductView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    // const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const product = useSelector(state => state.product);\n    const control = useSelector(state => state.control);\n\n    function openDialogAddProduct() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const openDialogUpdateProduct = (prop, number) => (event) => {\n        console.log(prop, number);\n        dispatch({ type: \"PRODUCT_UPDATE_NUMBER\", payload: number })\n        dispatch({ type: \"PRODUCT_UPDATE_ID\", payload: prop.id })\n        dispatch({ type: \"PRODUCT_UPDATE_NAME\", payload: prop.name })\n        dispatch({ type: \"PRODUCT_UPDATE_PRUDUCT_ID\", payload: prop.productId })\n        dispatch({ type: \"PRODUCT_UPDATE_PRICE\", payload: prop.price })\n        dispatch({ type: \"PRODUCT_UPDATE_IMAGE\", payload: prop.image })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n    }\n\n    React.useEffect(() => {\n        const data = [];\n        appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").get().then(snapshot => {\n            snapshot.docs.forEach(hospital => {\n                data.push(hospital.data())\n            });\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: data })\n            dispatch({ type: \"AUTH_FIST_PATH\", payload: sessionStorage.getItem(\"fist_path\") })\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: sessionStorage.getItem(\"liff_id\") })\n        })\n    }, [])\n\n    return (\n        <div style={{ paddingBottom: 70 }}>\n\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{ backgroundColor: \"white\" }}>\n                        {\"สินค้า\"}\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {product.storage.map((data, key) => (\n                    <React.Fragment key={key}>\n\n                        <ListItem alignItems=\"flex-start\">\n                            <Divider></Divider>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" alt=\"Remy Sharp\" src={data.image} style={{\n                                    width: 65,\n                                    height: 65\n                                }} />\n                            </ListItemAvatar>\n                            <ListItem button onClick={openDialogUpdateProduct(data, key)}>\n                                <ListItemText\n                                    primary={data.productId}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={classes.inline}\n                                                color=\"textPrimary\"\n                                            >\n                                                {data.name}\n                                            </Typography>\n                                            {\" — \" + data.price}\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </React.Fragment>\n                ))}\n\n            </List>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={openDialogAddProduct}>\n                    {\"เพิ่มสินค้า\"}\n                </Button>\n            </AppBar>\n            <DialogAddProduct></DialogAddProduct>\n            <DialogUpdateProduct></DialogUpdateProduct>\n        </div>\n    )\n};\n\nexport default AddProductView;","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/productReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddProduct/index.js",["152","153","154","155"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogAddProduct() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const product = useSelector(state => state.product);\n    const user = useSelector(state => state.user);\n    const appRef = fireStore.collection(\"line_apps\");\n    const parsed = queryString.parse(window.location.search);\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"PRODUCT_ADD_NAME\", payload: event.target.value })\n                break;\n            case \"price\":\n                dispatch({ type: \"PRODUCT_ADD_PRICE\", payload: event.target.value })\n                break;\n            case \"image\":\n                // console.log(event.target.files[0]);\n                var reader = new FileReader();\n                var baseString;\n                reader.onloadend = function () {\n                    baseString = reader.result;\n                    console.log(baseString);\n                    dispatch({ type: \"PRODUCT_ADD_IMAGE\", payload: baseString })\n                };\n                reader.readAsDataURL(event.target.files[0]);\n\n                break;\n            case \"productId\":\n                dispatch({ type: \"PRODUCT_ADD_PRUDUCT_ID\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const arr = product.storage;\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").doc();\n        await addressRef.set({\n            id: addressRef.id,\n            name: product.addName,\n            productId: product.addProductId,\n            price: product.addPrice,\n            image: product.addImage\n        }).then(function () {\n            arr.push({\n                id: addressRef.id,\n                name: product.addName,\n                productId: product.addProductId,\n                price: product.addPrice,\n                image: product.addImage\n            })\n            dispatch({ type: \"PRODUCT_ADD_IMAGE\", payload: \"\" })\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: arr });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n\n\n\n\n        });\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogAddProduct} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เพิ่มสินค้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รหัสสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกรหัสสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"productId\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ชื่อสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกชื่อสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ราคาสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกราคาสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"price\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รูปสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleChange(\"image\")} />\n                                <label htmlFor=\"icon-button-file\">\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Avatar variant=\"rounded\" alt=\"+\" style={{ width: 150, height: 150 }} >\n                                            {product.addImage ? (<React.Fragment>\n                                                <Avatar variant=\"rounded\" alt=\"+\" src={product.addImage} style={{ width: 150, height: 150 }} />\n                                            </React.Fragment>) : (<React.Fragment>\n                                                <ImageSearchIcon style={{\n                                                    fontSize: 80\n                                                }}></ImageSearchIcon>\n                                            </React.Fragment>)}\n\n                                        </Avatar>\n                                    </Grid>\n                                </label>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Add}>\n                    {\"บันทึก\"}\n                </Button>\n            </AppBar>\n        </Dialog>\n    );\n}\n","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateProduct/index.js",["156","157","158"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport DialogDeleteProduct from \"../DialogDeleteProduct\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogUpdateProduct() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const product = useSelector(state => state.product);\n    const user = useSelector(state => state.user);\n\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"PRODUCT_UPDATE_NAME\", payload: event.target.value })\n                break;\n            case \"price\":\n                dispatch({ type: \"PRODUCT_UPDATE_PRICE\", payload: event.target.value })\n                break;\n            case \"image\":\n                // console.log(event.target.files[0]);\n                var reader = new FileReader();\n                var baseString;\n                reader.onloadend = function () {\n                    baseString = reader.result;\n                    console.log(baseString);\n                    dispatch({ type: \"PRODUCT_UPDATE_IMAGE\", payload: baseString })\n                };\n                reader.readAsDataURL(event.target.files[0]);\n\n                break;\n            case \"productId\":\n                dispatch({ type: \"PRODUCT_UPDATE_PRUDUCT_ID\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const productRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").doc(product.updateId);\n        await productRef.set({\n            id: product.updateId,\n            name: product.updateName,\n            productId: product.updateProductId,\n            price: product.updatePrice,\n            image: product.updateImage\n        }).then(function () {\n            product.storage[product.updateNumber].name = product.updateName;\n            product.storage[product.updateNumber].productId = product.updateProductId;\n            product.storage[product.updateNumber].price = product.updatePrice;\n            product.storage[product.updateNumber].image = product.updateImage;\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: product.storage });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n\n        });\n    }\n\n    function Delete() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_PRODUCT\", payload: !control.openDialogDeleteProduct })\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogUpdateProduct} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"แก้ไขสินค้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รหัสสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updateProductId}\n                                    placeholder=\"โปรดกรอกรหัสสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"productId\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ชื่อสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updateName}\n                                    placeholder=\"โปรดกรอกชื่อสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ราคาสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updatePrice}\n                                    placeholder=\"โปรดกรอกราคาสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"price\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รูปสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleChange(\"image\")} />\n                                <label htmlFor=\"icon-button-file\">\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Avatar variant=\"rounded\" alt=\"+\" style={{ width: 150, height: 150 }} >\n                                            {product.updateImage ? (<React.Fragment>\n                                                <Avatar variant=\"rounded\" alt=\"+\" src={product.updateImage} style={{ width: 150, height: 150 }} />\n                                            </React.Fragment>) : (<React.Fragment>\n                                                <ImageSearchIcon style={{\n                                                    fontSize: 80\n                                                }}></ImageSearchIcon>\n                                            </React.Fragment>)}\n\n                                        </Avatar>\n                                    </Grid>\n                                </label>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                >\n                    <Grid item xs={8}>\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#00b900\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Add}>\n                            {\"บันทึก\"}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={4} >\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#f44336\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Delete}>\n                            {\"ลบ\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n            <DialogDeleteProduct></DialogDeleteProduct>\n        </Dialog>\n    );\n}\n","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteProduct/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/ProductView/index.js",["159","160","161","162","163","164","165"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/orderReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogListOrder/index.js",["166","167","168","169","170","171","172","173","174"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogSelectAddress/index.js",["175","176","177","178","179","180","181"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogBuyProduct/index.js",["182","183","184","185","186","187","188","189","190"],"/Users/n.devs/Desktop/develop/line-login-react/src/firebase.config.js",[],{"ruleId":"191","severity":1,"message":"192","line":85,"column":8,"nodeType":"193","endLine":85,"endColumn":34,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":162,"column":28,"nodeType":"197","messageId":"198","endLine":162,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":12},{"ruleId":"191","severity":1,"message":"203","line":88,"column":6,"nodeType":"193","endLine":88,"endColumn":8,"suggestions":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"199","severity":1,"message":"209","line":4,"column":22,"nodeType":"201","messageId":"202","endLine":4,"endColumn":30},{"ruleId":"199","severity":1,"message":"210","line":9,"column":12,"nodeType":"201","messageId":"202","endLine":9,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":70,"column":8,"nodeType":"193","endLine":70,"endColumn":10,"suggestions":"212"},{"ruleId":"191","severity":1,"message":"211","line":117,"column":8,"nodeType":"193","endLine":117,"endColumn":21,"suggestions":"213"},{"ruleId":"199","severity":1,"message":"214","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"215","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":14},{"ruleId":"199","severity":1,"message":"216","line":13,"column":8,"nodeType":"201","messageId":"202","endLine":13,"endColumn":16},{"ruleId":"199","severity":1,"message":"217","line":43,"column":10,"nodeType":"201","messageId":"202","endLine":43,"endColumn":24},{"ruleId":"199","severity":1,"message":"218","line":47,"column":10,"nodeType":"201","messageId":"202","endLine":47,"endColumn":15},{"ruleId":"199","severity":1,"message":"219","line":54,"column":11,"nodeType":"201","messageId":"202","endLine":54,"endColumn":17},{"ruleId":"199","severity":1,"message":"220","line":74,"column":14,"nodeType":"201","messageId":"202","endLine":74,"endColumn":25},{"ruleId":"191","severity":1,"message":"221","line":88,"column":8,"nodeType":"193","endLine":88,"endColumn":10,"suggestions":"222"},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"214","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"219","line":51,"column":11,"nodeType":"201","messageId":"202","endLine":51,"endColumn":17},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"214","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"221","line":82,"column":8,"nodeType":"193","endLine":82,"endColumn":10,"suggestions":"225"},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"219","line":56,"column":11,"nodeType":"201","messageId":"202","endLine":56,"endColumn":17},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"226","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":24},{"ruleId":"199","severity":1,"message":"227","line":12,"column":8,"nodeType":"201","messageId":"202","endLine":12,"endColumn":27},{"ruleId":"199","severity":1,"message":"228","line":16,"column":8,"nodeType":"201","messageId":"202","endLine":16,"endColumn":16},{"ruleId":"199","severity":1,"message":"229","line":17,"column":10,"nodeType":"201","messageId":"202","endLine":17,"endColumn":20},{"ruleId":"199","severity":1,"message":"230","line":73,"column":12,"nodeType":"201","messageId":"202","endLine":73,"endColumn":20},{"ruleId":"199","severity":1,"message":"231","line":85,"column":11,"nodeType":"201","messageId":"202","endLine":85,"endColumn":34},{"ruleId":"191","severity":1,"message":"221","line":119,"column":8,"nodeType":"193","endLine":119,"endColumn":23,"suggestions":"232"},{"ruleId":"199","severity":1,"message":"233","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"214","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"234","line":19,"column":8,"nodeType":"201","messageId":"202","endLine":19,"endColumn":17},{"ruleId":"199","severity":1,"message":"235","line":20,"column":10,"nodeType":"201","messageId":"202","endLine":20,"endColumn":19},{"ruleId":"199","severity":1,"message":"236","line":21,"column":8,"nodeType":"201","messageId":"202","endLine":21,"endColumn":19},{"ruleId":"199","severity":1,"message":"237","line":23,"column":8,"nodeType":"201","messageId":"202","endLine":23,"endColumn":23},{"ruleId":"199","severity":1,"message":"214","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"234","line":19,"column":8,"nodeType":"201","messageId":"202","endLine":19,"endColumn":17},{"ruleId":"199","severity":1,"message":"236","line":21,"column":8,"nodeType":"201","messageId":"202","endLine":21,"endColumn":19},{"ruleId":"199","severity":1,"message":"238","line":23,"column":8,"nodeType":"201","messageId":"202","endLine":23,"endColumn":24},{"ruleId":"191","severity":1,"message":"221","line":81,"column":8,"nodeType":"193","endLine":81,"endColumn":10,"suggestions":"239"},{"ruleId":"199","severity":1,"message":"214","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":12},{"ruleId":"199","severity":1,"message":"224","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":15,"column":8,"nodeType":"201","messageId":"202","endLine":15,"endColumn":16},{"ruleId":"199","severity":1,"message":"234","line":19,"column":8,"nodeType":"201","messageId":"202","endLine":19,"endColumn":17},{"ruleId":"199","severity":1,"message":"236","line":21,"column":8,"nodeType":"201","messageId":"202","endLine":21,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":22,"column":8,"nodeType":"201","messageId":"202","endLine":22,"endColumn":14},{"ruleId":"199","severity":1,"message":"237","line":23,"column":8,"nodeType":"201","messageId":"202","endLine":23,"endColumn":23},{"ruleId":"199","severity":1,"message":"240","line":24,"column":8,"nodeType":"201","messageId":"202","endLine":24,"endColumn":22},{"ruleId":"199","severity":1,"message":"241","line":25,"column":8,"nodeType":"201","messageId":"202","endLine":25,"endColumn":18},"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'parsed.liff_id'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["242"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'liff' is defined but never used.","Identifier","unusedVar","React Hook React.useEffect has missing dependencies: 'auth.status', 'dispatch', and 'parsed.liff_id'. Either include them or remove the dependency array.",["243"],"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'Redirect' is defined but never used.","'loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'parsed.liff_id'. Either include them or remove the dependency array.",["246"],["247"],"'Grid' is defined but never used.","'Avatar' is defined but never used.","'Snackbar' is defined but never used.","'TransitionDown' is defined but never used.","'Alert' is defined but never used.","'parsed' is assigned a value but never used.","'handleClose' is defined but never used.","React Hook React.useEffect has missing dependencies: 'appRef', 'dispatch', and 'user.userId'. Either include them or remove the dependency array.",["248"],"'List' is defined but never used.","'NumberPhoneInput' is defined but never used.",["249"],"'DialogAddProduct' is defined but never used.","'DialogUpdateProduct' is defined but never used.","'ListItem' is defined but never used.","'ButtonBase' is defined but never used.","'onLength' is assigned a value but never used.","'openDialogUpdateProduct' is assigned a value but never used.",["250"],"'Button' is defined but never used.","'InputBase' is defined but never used.","'fireStore' is defined but never used.","'queryString' is defined but never used.","'ImageSearchIcon' is defined but never used.","'DialogBuyProduct' is defined but never used.",["251"],"'ListItemAvatar' is defined but never used.","'DeleteIcon' is defined but never used.",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"256"},{"desc":"254","fix":"257"},{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"261","fix":"262"},{"desc":"258","fix":"263"},"Update the dependencies array to be: [dispatch, parsed.liff_id]",{"range":"264","text":"265"},"Update the dependencies array to be: [auth.status, dispatch, parsed.liff_id]",{"range":"266","text":"267"},{"range":"268","text":"265"},{"range":"269","text":"267"},"Update the dependencies array to be: [appRef, dispatch, user.userId]",{"range":"270","text":"271"},{"range":"272","text":"271"},"Update the dependencies array to be: [appRef, dispatch, order.storage, user.userId]",{"range":"273","text":"274"},{"range":"275","text":"271"},[2832,2858],"[dispatch, parsed.liff_id]",[2470,2472],"[auth.status, dispatch, parsed.liff_id]",[3436,3438],[5012,5025],[3376,3378],"[appRef, dispatch, user.userId]",[3178,3180],[4425,4440],"[appRef, dispatch, order.storage, user.userId]",[3106,3108]]