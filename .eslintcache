[{"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/rootReducer.js":"1","/Users/n.devs/Desktop/develop/line-login-react/src/views/SettingView/index.js":"2","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogChangNumberPhone/index.js":"3","/Users/n.devs/Desktop/develop/line-login-react/src/App.js":"4","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/userReducer.js":"5","/Users/n.devs/Desktop/develop/line-login-react/src/views/NotFoundLIFFIDView/index.js":"6","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/authReducer.js":"7","/Users/n.devs/Desktop/develop/line-login-react/src/views/LiffRedirectUriView/index.js":"8","/Users/n.devs/Desktop/develop/line-login-react/src/views/SetupView/index.js":"9","/Users/n.devs/Desktop/develop/line-login-react/src/index.js":"10","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/todoReducer.js":"11","/Users/n.devs/Desktop/develop/line-login-react/src/components/Loading/index.js":"12","/Users/n.devs/Desktop/develop/line-login-react/src/views/AddressView/index.js":"13","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/controlReducer.js":"14","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddAddress/index.js":"15","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/addressReducer.js":"16","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateAddress/index.js":"17","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteAddress/index.js":"18","/Users/n.devs/Desktop/develop/line-login-react/src/views/AddProductView/index.js":"19","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/productReducer.js":"20","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddProduct/index.js":"21","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateProduct/index.js":"22","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteProduct/index.js":"23","/Users/n.devs/Desktop/develop/line-login-react/src/views/ProductView/index.js":"24","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/orderReducer.js":"25","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogListOrder/index.js":"26","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogSelectAddress/index.js":"27","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogBuyProduct/index.js":"28","/Users/n.devs/Desktop/develop/line-login-react/src/firebase.config.js":"29"},{"size":629,"mtime":1612039901600,"results":"30","hashOfConfig":"31"},{"size":6819,"mtime":1612002000010,"results":"32","hashOfConfig":"31"},{"size":3217,"mtime":1611960826557,"results":"33","hashOfConfig":"31"},{"size":4081,"mtime":1612055741709,"results":"34","hashOfConfig":"31"},{"size":899,"mtime":1612051333248,"results":"35","hashOfConfig":"31"},{"size":174,"mtime":1611947957921,"results":"36","hashOfConfig":"31"},{"size":692,"mtime":1611991693677,"results":"37","hashOfConfig":"31"},{"size":3580,"mtime":1612055980153,"results":"38","hashOfConfig":"31"},{"size":8931,"mtime":1612055766398,"results":"39","hashOfConfig":"31"},{"size":655,"mtime":1611940171038,"results":"40","hashOfConfig":"31"},{"size":767,"mtime":1611940063177,"results":"41","hashOfConfig":"31"},{"size":338,"mtime":1611936984428,"results":"42","hashOfConfig":"31"},{"size":5656,"mtime":1612056181487,"results":"43","hashOfConfig":"31"},{"size":2030,"mtime":1612046930661,"results":"44","hashOfConfig":"31"},{"size":7863,"mtime":1612056409645,"results":"45","hashOfConfig":"31"},{"size":1755,"mtime":1612030586329,"results":"46","hashOfConfig":"31"},{"size":9430,"mtime":1612036048121,"results":"47","hashOfConfig":"31"},{"size":3545,"mtime":1612036405840,"results":"48","hashOfConfig":"31"},{"size":5914,"mtime":1612055946165,"results":"49","hashOfConfig":"31"},{"size":2190,"mtime":1612034666772,"results":"50","hashOfConfig":"31"},{"size":10304,"mtime":1612056380090,"results":"51","hashOfConfig":"31"},{"size":11871,"mtime":1612055932519,"results":"52","hashOfConfig":"31"},{"size":4124,"mtime":1612036761409,"results":"53","hashOfConfig":"31"},{"size":6620,"mtime":1612056324490,"results":"54","hashOfConfig":"31"},{"size":750,"mtime":1612045035045,"results":"55","hashOfConfig":"31"},{"size":4794,"mtime":1612055875020,"results":"56","hashOfConfig":"31"},{"size":5807,"mtime":1612055894600,"results":"57","hashOfConfig":"31"},{"size":7187,"mtime":1612055846129,"results":"58","hashOfConfig":"31"},{"size":629,"mtime":1612056242353,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"zqtubk",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/rootReducer.js",[],["127","128"],"/Users/n.devs/Desktop/develop/line-login-react/src/views/SettingView/index.js",["129","130"],"import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport NumberPhoneInput from '../../components/NumberPhoneInput';\nimport DialogChangNumberPhone from '../../components/DialogChangNumberPhone';\n// import liff from '@line/liff';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\nfunction TransitionDown(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction SettingView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const control = useSelector(state => state.control);\n\n    function openDialog() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_CHANG_NUMBER_PHONE\", payload: !control.openDialogChangNumber })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    async function Update() {\n        await appRef.doc(parsed.liff_id).collection(\"users\").doc(user.userId).update({\n            userId: user.userId,\n            displayName: user.displayName,\n            pictureUrl: user.pictureUrl,\n            numberPhone: user.numberPhone\n        }).then(function () {\n            dispatch({ type: \"AUTH_STATUS\", payload: true })\n            dispatch({ type: \"CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS\", payload: !control.openSnackbarUpdateNumberSeccuss })\n            // liff.init({ liffId: `${parsed.liff_id}` }).then(async () => {\n            //     await liff.init().closeWindow()\n\n            // }).catch(err => { throw err });\n\n\n        });\n\n    }\n\n    function handleClose() {\n        dispatch({ type: \"CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS\", payload: !control.openSnackbarUpdateNumberSeccuss })\n    }\n\n    React.useEffect(() => {\n        dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n        dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n    }, [window.location.pathname])\n    return (\n        <div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.app}\n            >\n                <Grid item xs={12}>\n                    <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={12}>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                                style={{\n                                    paddingTop: 20\n                                }}\n                            >\n                                <Avatar alt={user.displayName} src={user.pictureUrl} className={classes.avatars} />\n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                            >\n                                <Typography variant=\"h6\" component=\"h6\">\n                                    {user.displayName}\n                                </Typography>\n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                                style={{\n                                    paddingTop: 20\n                                }}\n                            >\n                                <label htmlFor=\"phone\">{\"หมายเลขโทรศัพท์ที่ลงทะเบียน:\"}</label>\n                                <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" value={user.numberPhone} onClick={openDialog}></NumberPhoneInput>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Update}>\n                    {\"เปลี่ยนหมายเลขโทรศัพท์\"}\n                </Button>\n            </AppBar>\n            <DialogChangNumberPhone></DialogChangNumberPhone>\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                open={control.openSnackbarUpdateNumberSeccuss}\n                onClose={handleClose}\n                style={{ backgroundColor: 'white' }}\n                ContentProps={{ style: { backgroundColor: 'white',\n                boxShadow: '0px 3px 5px -1px rgb(0 0 0 / 0%), 0px 6px 10px 0px rgb(0 0 0 / 0%), 0px 1px 18px 0px rgb(0 0 0 / 0%)' } }}\n                TransitionComponent={TransitionDown}\n                autoHideDuration={6000}\n                message={<Alert onClose={handleClose} severity=\"success\">\n                    {`บันทึกหมายเลขโทรศัพท์ ${user.numberPhone}`}\n                </Alert>}\n                key={\"top\" + \"center\"}\n            >\n\n            </Snackbar>\n        </div>\n    )\n};\n\nexport default SettingView;","/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogChangNumberPhone/index.js",[],["131","132"],"/Users/n.devs/Desktop/develop/line-login-react/src/App.js",["133"],"import React from \"react\";\nimport \"./App.css\";\n// import liff from \"@line/liff\";\nimport {\n  makeStyles\n} from \"@material-ui/core/styles\";\nimport Loading from \"./components/Loading\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n// import { fireStore } from \"./firebase.config\"\nimport queryString from \"query-string\";\nimport NotFoundLIFFIDView from \"./views/NotFoundLIFFIDView\"\nimport SetupView from \"./views/SetupView\"\nimport SettingView from \"./views/SettingView\"\nimport LiffRedirectUriView from \"./views/LiffRedirectUriView\"\nimport AddressView from \"./views/AddressView\"\nimport AddProductView from \"./views/AddProductView\"\nimport ProductView from \"./views/ProductView\"\n\nconst useStyles = makeStyles((theme) => ({\n  avatars: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"white\",\n    padding: 15,\n  },\n  layout: {\n    padding: \"10px 0px\"\n  },\n  app: {\n    height: 450\n  }\n}));\n\nfunction RunView(props) {\n  const auth = useSelector(state => state.auth);\n  const parsed = queryString.parse(window.location.search);\n  console.log(auth.liff_id);\n  return (\n    <React.Fragment>\n      {auth.liff_id ? (<React.Fragment>\n        {auth.status ? (\n          <React.Fragment>\n            {props.children}\n          </React.Fragment>\n        ) : (\n            <React.Fragment>\n              <Redirect to={`/setup?liff_id=${parsed.liff_id}&pathname=${window.location.pathname}`} />\n            </React.Fragment>\n          )}\n      </React.Fragment>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n\n    </React.Fragment>\n  )\n}\n\nfunction App() {\n  const [loading, setLoading] = React.useState(true);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const parsed = queryString.parse(window.location.search);\n  const auth = useSelector(state => state.auth);\n\n  React.useEffect(() => {\n    if (parsed.liff_id) {\n      sessionStorage.setItem(\"liff_id\", parsed.liff_id);\n      sessionStorage.setItem(\"fist_path\", window.location.pathname);\n      dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n      dispatch({ type: \"AUTH_STATUS\", payload: auth.status })\n      setLoading(false)\n    } else {\n      setLoading(false)\n      dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n    }\n  }, [])\n\n\n  return (\n    <div className={classes.app}>\n      {loading ? (\n        <Loading></Loading>\n      ) : (<React.Fragment>\n        <Router>\n          <TransitionGroup>\n            <CSSTransition\n              key={window.location.key}\n              classNames=\"fade\"\n              timeout={300}\n            >\n              <Switch>\n                <Route exact path={`/`}>\n                  {sessionStorage.getItem(\"liff_id\") ? (<LiffRedirectUriView></LiffRedirectUriView>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n\n                </Route>\n                <Route path={`/setup`}>\n                  {sessionStorage.getItem(\"liff_id\") ? (<SetupView></SetupView>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n                </Route>\n\n                <Route path={`/setting`}>\n                  <RunView>\n                    <SettingView></SettingView>\n                  </RunView>\n                </Route>\n                <Route path={`/address`}>\n                  <RunView>\n                    <AddressView></AddressView>\n                  </RunView>\n                </Route>\n                <Route path={`/add_product`}>\n                  <RunView>\n                    <AddProductView></AddProductView>\n                  </RunView>\n                </Route>\n                <Route path={`/products`}>\n                  <RunView>\n                    <ProductView></ProductView>\n                  </RunView>\n                </Route>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </Router>\n      </React.Fragment>)}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/n.devs/Desktop/develop/line-login-react/src/reducers/userReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/NotFoundLIFFIDView/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/authReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/LiffRedirectUriView/index.js",["134","135"],"/Users/n.devs/Desktop/develop/line-login-react/src/views/SetupView/index.js",["136"],"import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport NumberPhoneInput from '../../components/NumberPhoneInput';\nimport { useHistory } from 'react-router-dom';\nimport liff from \"@line/liff\";\nimport Loading from '../../components/Loading';\nimport { Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\n\nfunction SetupView() {\n    const [loading, setLoading] = React.useState(true);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const auth = useSelector(state => state.auth);\n    // const [status,setStatus] = React.useState(false)\n    const history = useHistory();\n    const handleChange = (prop) => (event) => {\n        dispatch({ type: \"USER_NUMBER_PHONE\", payload: event.target.value })\n    };\n    const appRef = fireStore.collection(\"line_apps\");\n\n    async function Update() {\n        await appRef.doc(parsed.liff_id).collection(\"users\").doc(user.userId).update({\n            userId: user.userId,\n            displayName: user.displayName,\n            pictureUrl: user.pictureUrl,\n            numberPhone: user.numberPhone\n        }).then(function () {\n            dispatch({ type: \"AUTH_STATUS\", payload: true });\n            history.push(`${parsed.pathname}?liff_id=${parsed.liff_id}`)\n        });\n\n    }\n    React.useEffect(() => {\n        const appRef = fireStore.collection(\"line_apps\");\n        if (sessionStorage.getItem(\"liff_id\")) {\n            liff.init({ liffId: `${sessionStorage.getItem(\"liff_id\")}` }).then(async () => {\n\n                if (liff.isLoggedIn()) {\n                    const getProfile = await liff.getProfile();\n                    console.log(getProfile);\n\n                    const userId = await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).get();\n\n                    if (!userId.exists) {\n                        console.log(\"No such document!\");\n                        dispatch({ type: \"AUTH_STATUS\", payload: false })\n                        dispatch({ type: \"USER_DISPLAY_NAME\", payload: getProfile.displayName });\n                        dispatch({ type: \"USER_ID\", payload: getProfile.userId });\n                        dispatch({ type: \"USER_PICTURE_URL\", payload: getProfile.pictureUrl });\n                        await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).set({ ...getProfile })\n\n                    } else {\n                       \n                        console.log(\"getProfile line:\", getProfile);\n                        if (userId.data().numberPhone) {\n                            console.log(\"Document data:\", userId.data());\n                            dispatch({ type: \"AUTH_STATUS\", payload: true })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            dispatch({ type: \"USER_NUMBER_PHONE\", payload: userId.data().numberPhone })\n                            setLoading(false)\n                            // setStatus(auth.status)\n                        } else {\n                            dispatch({ type: \"AUTH_STATUS\", payload: false })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            setLoading(false)\n                        }\n                    }\n                } else {\n                    dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n\n                    liff.login({ redirectUri: `${window.location.href}` });\n                    console.log(\"a\");\n                }\n\n            }).catch(err => { throw err });\n        } else {\n            // setLoading(false)\n            console.log(\"b\");\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n        }\n    }, [])\n\n    return (\n        <div>\n            {loading ? (<React.Fragment>\n                <Loading></Loading>\n            </React.Fragment>) : (<React.Fragment>\n                {auth.status ? (<React.Fragment>\n                    <Redirect to={`${parsed.pathname}?liff_id=${parsed.liff_id}`}></Redirect>\n                </React.Fragment>) : (<React.Fragment>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.app}\n                    >\n                        <Grid item xs={12}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item xs={12}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <Avatar alt={user.displayName} src={user.pictureUrl} className={classes.avatars} />\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                    >\n                                        <Typography variant=\"h6\" component=\"h6\">\n                                            {user.displayName}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <label htmlFor=\"phone\">{\"ลงทะเบียนหมายเลขโทรศัพท์:\"}</label>\n                                        <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" onChange={handleChange()}></NumberPhoneInput>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12}></Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                        <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Update}>\n                            {\"เพิ่มหมายเลขโทรศัพท์\"}\n                        </Button>\n                    </AppBar>\n                </React.Fragment>)}\n\n            </React.Fragment>)}\n\n        </div>\n    )\n};\n\nexport default SetupView;","/Users/n.devs/Desktop/develop/line-login-react/src/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/todoReducer.js",[],["137","138"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/Loading/index.js",[],["139","140"],"/Users/n.devs/Desktop/develop/line-login-react/src/views/AddressView/index.js",["141"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/controlReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddAddress/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/addressReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateAddress/index.js",["142","143","144"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport DialogDeleteAddress from \"../DialogDeleteAddress\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogUpdateAddress() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const address = useSelector(state => state.address);\n    const user = useSelector(state => state.user);\n\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"ADDRESS_UPDATE_NAME\", payload: event.target.value })\n                break;\n            case \"numberPhone\":\n                dispatch({ type: \"ADDRESS_UPDATE_NUMBER_PHONE\", payload: event.target.value })\n                break;\n            case \"address\":\n                dispatch({ type: \"ADDRESS_UPDATE_ADDRESS\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").doc(address.updateId);\n        await addressRef.set({\n            id: address.updateId,\n            name: address.updateName,\n            numberPhone: address.updateNumberPhone,\n            address: address.updateAddress\n        }).then(function () {\n            address.storage[address.updateNumber].name = address.updateName;\n            address.storage[address.updateNumber].numberPhone = address.updateNumberPhone;\n            address.storage[address.updateNumber].address = address.updateAddress;\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: address.storage });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n\n        });\n    }\n\n    function Delete() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_ADDRESS\", payload: !control.openDialogDeleteAddress })\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogUpdateAddress} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"แก้ไขที่อยู่จัดส่ง\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ผู้รับ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={address.updateName}\n                                    placeholder=\"โปรดกรอกชื่อผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"หมายเลขโทรศัพท์มือถือ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={address.updateNumberPhone}\n                                    placeholder=\"โปรดกรอกหมายเลขโทรศัพท์มือถือผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"numberPhone\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ที่อยู่จัดส่ง\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    rows={4}\n                                    defaultValue={address.updateAddress}\n                                    multiline\n                                    placeholder=\"โปรดกรอกรายละเอียดที่อยู่ เช่นบ้านเลขที่ หมู่บ้าน ถนน เขต ตำบล อำเภอ จังหวัด รหัสไปรษณีย์ \"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"address\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                >\n                    <Grid item xs={8}>\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#00b900\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Add}>\n                            {\"บันทึก\"}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={4} >\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#f44336\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Delete}>\n                            {\"ลบ\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n            <DialogDeleteAddress></DialogDeleteAddress>\n        </Dialog>\n    );\n}\n",["145","146"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteAddress/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/AddProductView/index.js",["147"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/productReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogAddProduct/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogUpdateProduct/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogDeleteProduct/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/views/ProductView/index.js",["148","149"],"/Users/n.devs/Desktop/develop/line-login-react/src/reducers/orderReducer.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogListOrder/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogSelectAddress/index.js",["150"],"/Users/n.devs/Desktop/develop/line-login-react/src/components/DialogBuyProduct/index.js",[],"/Users/n.devs/Desktop/develop/line-login-react/src/firebase.config.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":85,"column":8,"nodeType":"157","endLine":85,"endColumn":34,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":162,"column":28,"nodeType":"161","messageId":"162","endLine":162,"endColumn":29},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"165","line":88,"column":6,"nodeType":"157","endLine":88,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":9,"column":12,"nodeType":"169","messageId":"170","endLine":9,"endColumn":19},{"ruleId":"155","severity":1,"message":"171","line":70,"column":8,"nodeType":"157","endLine":70,"endColumn":10,"suggestions":"172"},{"ruleId":"155","severity":1,"message":"171","line":117,"column":8,"nodeType":"157","endLine":117,"endColumn":10,"suggestions":"173"},{"ruleId":"151","replacedBy":"174"},{"ruleId":"153","replacedBy":"175"},{"ruleId":"151","replacedBy":"176"},{"ruleId":"153","replacedBy":"177"},{"ruleId":"155","severity":1,"message":"178","line":89,"column":8,"nodeType":"157","endLine":89,"endColumn":10,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":12},{"ruleId":"167","severity":1,"message":"181","line":14,"column":8,"nodeType":"169","messageId":"170","endLine":14,"endColumn":24},{"ruleId":"167","severity":1,"message":"182","line":15,"column":8,"nodeType":"169","messageId":"170","endLine":15,"endColumn":16},{"ruleId":"151","replacedBy":"183"},{"ruleId":"153","replacedBy":"184"},{"ruleId":"155","severity":1,"message":"185","line":82,"column":8,"nodeType":"157","endLine":82,"endColumn":10,"suggestions":"186"},{"ruleId":"167","severity":1,"message":"187","line":73,"column":12,"nodeType":"169","messageId":"170","endLine":73,"endColumn":20},{"ruleId":"155","severity":1,"message":"185","line":119,"column":8,"nodeType":"157","endLine":119,"endColumn":23,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"185","line":81,"column":8,"nodeType":"157","endLine":81,"endColumn":10,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'parsed.liff_id'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["192"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["190"],["191"],"React Hook React.useEffect has missing dependencies: 'auth.status', 'dispatch', and 'parsed.liff_id'. Either include them or remove the dependency array.",["193"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has missing dependencies: 'dispatch' and 'parsed.liff_id'. Either include them or remove the dependency array.",["194"],["195"],["190"],["191"],["190"],["191"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'user.userId'. Either include them or remove the dependency array.",["196"],"'List' is defined but never used.","'NumberPhoneInput' is defined but never used.","'Snackbar' is defined but never used.",["190"],["191"],"React Hook React.useEffect has missing dependencies: 'appRef', 'dispatch', and 'user.userId'. Either include them or remove the dependency array.",["197"],"'onLength' is assigned a value but never used.",["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"200","fix":"204"},{"desc":"200","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"208","fix":"212"},"Update the dependencies array to be: [dispatch, parsed.liff_id]",{"range":"213","text":"214"},"Update the dependencies array to be: [auth.status, dispatch, parsed.liff_id]",{"range":"215","text":"216"},{"range":"217","text":"214"},{"range":"218","text":"214"},"Update the dependencies array to be: [dispatch, user.userId]",{"range":"219","text":"220"},"Update the dependencies array to be: [appRef, dispatch, user.userId]",{"range":"221","text":"222"},"Update the dependencies array to be: [appRef, dispatch, order.storage, user.userId]",{"range":"223","text":"224"},{"range":"225","text":"222"},[2832,2858],"[dispatch, parsed.liff_id]",[2473,2475],"[auth.status, dispatch, parsed.liff_id]",[3426,3428],[5012,5014],[3431,3433],"[dispatch, user.userId]",[3181,3183],"[appRef, dispatch, user.userId]",[4467,4482],"[appRef, dispatch, order.storage, user.userId]",[3124,3126]]