{"version":3,"sources":["components/Loading/index.js","views/NotFoundLIFFIDView/index.js","firebase.config.js","components/NumberPhoneInput/index.js","views/SetupView/index.js","components/DialogChangNumberPhone/index.js","views/SettingView/index.js","views/LiffRedirectUriView/index.js","components/DialogAddAddress/index.js","components/DialogDeleteAddress/index.js","components/DialogUpdateAddress/index.js","views/AddressView/index.js","components/DialogAddProduct/index.js","components/DialogDeleteProduct/index.js","components/DialogUpdateProduct/index.js","views/AddProductView/index.js","components/DialogListOrder/index.js","components/DialogBuyProduct/index.js","components/DialogSelectAddress/index.js","views/ProductView/index.js","App.js","reportWebVitals.js","reducers/userReducer.js","reducers/controlReducer.js","reducers/todoReducer.js","reducers/authReducer.js","reducers/addressReducer.js","reducers/productReducer.js","reducers/orderReducer.js","reducers/rootReducer.js","index.js"],"names":["Loading","className","NotFoundLIFFIDView","Fragment","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","app","fireStore","firestore","NumberPhoneInput","withStyles","theme","input","color","fontWeight","borderRadius","position","backgroundColor","palette","common","white","textAlign","fontSize","width","padding","fontFamily","join","InputBase","useStyles","makeStyles","avatars","spacing","height","appBar","top","bottom","layout","SetupView","React","useState","loading","setLoading","dispatch","useDispatch","classes","parsed","queryString","parse","window","location","search","user","useSelector","state","auth","history","useHistory","appRef","collection","a","doc","liff_id","userId","update","displayName","pictureUrl","numberPhone","then","type","payload","push","pathname","useEffect","sessionStorage","getItem","liff","init","liffId","isLoggedIn","getProfile","console","log","get","exists","set","data","login","redirectUri","href","catch","err","status","to","Grid","container","direction","justify","alignItems","item","xs","style","paddingTop","Avatar","alt","src","Typography","variant","component","htmlFor","id","name","pattern","placeholder","onChange","event","target","value","AppBar","Button","onClick","title","flex","Transition","forwardRef","props","ref","Slide","DialogChangNumberPhone","control","handleClose","openDialogChangNumber","Dialog","fullScreen","open","onClose","TransitionComponent","Toolbar","IconButton","edge","aria-label","List","defaultValue","TransitionDown","Alert","elevation","SettingView","openSnackbarUpdateNumberSeccuss","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","boxShadow","autoHideDuration","message","severity","LiffRedirectUriView","appBarBottom","DialogAddAddress","address","openDialogAddAddress","handleChange","prop","arr","storage","addressRef","addName","addNumbeerPhone","addAddress","ListItem","button","ListItemText","primary","secondary","Divider","rows","multiline","DialogDeleteAddress","openDialogDeleteAddress","updateId","delete","updateNumber","openDialogUpdateAddress","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","updateName","updateNumberPhone","updateAddress","DialogActions","autoFocus","DialogUpdateAddress","AddressView","snapshot","docs","forEach","hospital","paddingBottom","subheader","ListSubheader","root","map","key","number","inline","display","DialogAddProduct","product","openDialogAddProduct","baseString","reader","FileReader","onloadend","result","readAsDataURL","files","productId","addProductId","price","addPrice","image","addImage","accept","DialogDeleteProduct","openDialogDeleteProduct","productRef","openDialogUpdateProduct","ListItemAvatar","updateImage","updateProductId","updatePrice","DialogUpdateProduct","AddProductView","DialogListOrder","order","openDialogListOrder","DeleteItem","DialogBuyProduct","openDialogSumOrder","orderRef","parseInt","reduce","prev","next","DialogSelectAddress","selectedIndex","setSelectedIndex","openDialogSelectAddress","selected","index","handleListItemClick","StyledBadge","badge","right","border","background","paper","Badge","gridList","icon","ProductView","setLength","GridList","GridListTile","cols","float","badgeContent","GridListTileBar","subtitle","actionIcon","RunView","children","App","setItem","TransitionGroup","CSSTransition","classNames","timeout","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","userReducer","action","controlReducer","todoList","content","todoReducer","authReducer","fistPath","addressReducer","addId","productReducer","Reducer","rootReducer","combineReducers","todos","orderReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e88980d0.chunk.js","sourcesContent":["import './style.scss';\n\nfunction Loading() {\n    return (<div className=\"pan-loader\">\n        <div className=\"loader\"></div>\n        <div className=\"pan-container\">\n            <div className=\"pan\"></div>\n            <div className=\"handle\"></div>\n        </div>\n        <div className=\"shadow\"></div>\n    </div>)\n}\nexport default Loading","import React from 'react';\n\nfunction NotFoundLIFFIDView() {\n    return (<React.Fragment> {\"ไม่พบ LIFF ID\"}</ React.Fragment>)\n};\n\nexport default NotFoundLIFFIDView;","import firebase from 'firebase';\nimport 'firebase/firebase-firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDCUQ-vsV4VYRP16pHojugIJE_bsyL1jh0\",\n    authDomain: \"cafe-frontend.firebaseapp.com\",\n    projectId: \"cafe-frontend\",\n    storageBucket: \"cafe-frontend.appspot.com\",\n    messagingSenderId: \"756372913299\",\n    appId: \"1:756372913299:web:2656132921e877b4a12166\",\n    measurementId: \"G-7Z8SS2XT6X\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nif (!firebase.apps.length) {\n    firebase.initializeApp({});\n} else {\n    firebase.app(); // if already initialized, use that one\n}\n\nexport const fireStore = firebase.firestore();\n\n","import {\n    fade,\n    withStyles\n} from '@material-ui/core/styles';\n\nimport InputBase from '@material-ui/core/InputBase';\n\nconst NumberPhoneInput = withStyles((theme) => ({\n    // root: {\n    //     'label + &': {\n    //         marginTop: theme.spacing(3),\n    //     },\n    // },\n    input: {\n        color: '#00b900',\n        fontWeight: 'bold',\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        //   border: '1px solid #ced4da',\n        textAlign: 'center',\n        fontSize: 30,\n        width: 'auto',\n        padding: '10px 12px',\n        //   transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            'Roboto','Meiryo','-apple-system','system-ui','BlinkMacSystemFont','Segoe UI','Helvetica Neue','Segoe UI Emoji','Segoe UI Symbol','Apple Color Emoji','Noto Color Emoji','Noto Emoji','sans-serif','Arial',\n        ].join(','),\n        //   '&:focus': {\n        //     boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n        //     borderColor: theme.palette.primary.main,\n        //   },\n    },\n}))(InputBase);\n\nexport default NumberPhoneInput","import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport NumberPhoneInput from '../../components/NumberPhoneInput';\nimport { useHistory } from 'react-router-dom';\nimport liff from \"@line/liff\";\nimport Loading from '../../components/Loading';\nimport { Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\n\nfunction SetupView() {\n    const [loading, setLoading] = React.useState(true);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const auth = useSelector(state => state.auth);\n    // const [status,setStatus] = React.useState(false)\n    const history = useHistory();\n    const handleChange = (prop) => (event) => {\n        dispatch({ type: \"USER_NUMBER_PHONE\", payload: event.target.value })\n    };\n    const appRef = fireStore.collection(\"line_apps\");\n\n    async function Update() {\n        await appRef.doc(parsed.liff_id).collection(\"users\").doc(user.userId).update({\n            userId: user.userId,\n            displayName: user.displayName,\n            pictureUrl: user.pictureUrl,\n            numberPhone: user.numberPhone\n        }).then(function () {\n            dispatch({ type: \"AUTH_STATUS\", payload: true });\n            history.push(`${parsed.pathname}?liff_id=${parsed.liff_id}`)\n        });\n\n    }\n    React.useEffect(() => {\n        const appRef = fireStore.collection(\"line_apps\");\n        if (sessionStorage.getItem(\"liff_id\")) {\n            liff.init({ liffId: `${sessionStorage.getItem(\"liff_id\")}` }).then(async () => {\n\n                if (liff.isLoggedIn()) {\n                    const getProfile = await liff.getProfile();\n                    console.log(getProfile);\n\n                    const userId = await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).get();\n\n                    if (!userId.exists) {\n                        console.log(\"No such document!\");\n                        dispatch({ type: \"AUTH_STATUS\", payload: false })\n                        dispatch({ type: \"USER_DISPLAY_NAME\", payload: getProfile.displayName });\n                        dispatch({ type: \"USER_ID\", payload: getProfile.userId });\n                        dispatch({ type: \"USER_PICTURE_URL\", payload: getProfile.pictureUrl });\n                        await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).set({ ...getProfile })\n\n                    } else {\n                       \n                        console.log(\"getProfile line:\", getProfile);\n                        if (userId.data().numberPhone) {\n                            console.log(\"Document data:\", userId.data());\n                            dispatch({ type: \"AUTH_STATUS\", payload: true })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            dispatch({ type: \"USER_NUMBER_PHONE\", payload: userId.data().numberPhone })\n                            setLoading(false)\n                            // setStatus(auth.status)\n                        } else {\n                            dispatch({ type: \"AUTH_STATUS\", payload: false })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            setLoading(false)\n                        }\n                    }\n                } else {\n                    dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n\n                    liff.login({ redirectUri: `${window.location.href}` });\n                    console.log(\"a\");\n                }\n\n            }).catch(err => { throw err });\n        } else {\n            // setLoading(false)\n            console.log(\"b\");\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n        }\n    }, [auth.status])\n\n    return (\n        <div>\n            {loading ? (<React.Fragment>\n                <Loading></Loading>\n            </React.Fragment>) : (<React.Fragment>\n                {auth.status ? (<React.Fragment>\n                    <Redirect to={`${parsed.pathname}?liff_id=${parsed.liff_id}`}></Redirect>\n                </React.Fragment>) : (<React.Fragment>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.app}\n                    >\n                        <Grid item xs={12}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item xs={12}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <Avatar alt={user.displayName} src={user.pictureUrl} className={classes.avatars} />\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                    >\n                                        <Typography variant=\"h6\" component=\"h6\">\n                                            {user.displayName}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        className={classes.layout}\n                                        style={{\n                                            paddingTop: 20\n                                        }}\n                                    >\n                                        <label htmlFor=\"phone\">{\"ลงทะเบียนหมายเลขโทรศัพท์:\"}</label>\n                                        <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" onChange={handleChange()}></NumberPhoneInput>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12}></Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                        <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Update}>\n                            {\"เพิ่มหมายเลขโทรศัพท์\"}\n                        </Button>\n                    </AppBar>\n                </React.Fragment>)}\n\n            </React.Fragment>)}\n\n        </div>\n    )\n};\n\nexport default SetupView;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput'\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogChangNumberPhone() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const user = useSelector(state => state.user);\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_CHANG_NUMBER_PHONE\", payload: !control.openDialogChangNumber })\n    };\n\n    const handleChange = (prop) => (event) => {\n        dispatch({ type: \"USER_NUMBER_PHONE\", payload: event.target.value })\n    };\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogChangNumber} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เปลี่ยนหมายเลขโทรศัพท์\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <List>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={classes.layout}\n                    style={{\n                        paddingTop: 20\n                    }}\n                >\n                    <label htmlFor=\"phone\">{\"หมายเลขโทรศัพท์ที่ลงทะเบียน:\"}</label>\n                    <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" defaultValue={user.numberPhone} onChange={handleChange()} style={{color:\"#5b82db\"}}></NumberPhoneInput>\n                    <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\", width: 250 }} onClick={handleClose}>\n                        {\"บันทึก\"}\n                    </Button>\n                </Grid>\n            </List>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport NumberPhoneInput from '../../components/NumberPhoneInput';\nimport DialogChangNumberPhone from '../../components/DialogChangNumberPhone';\n// import liff from '@line/liff';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\nfunction TransitionDown(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction SettingView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const control = useSelector(state => state.control);\n\n    function openDialog() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_CHANG_NUMBER_PHONE\", payload: !control.openDialogChangNumber })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    async function Update() {\n        await appRef.doc(parsed.liff_id).collection(\"users\").doc(user.userId).update({\n            userId: user.userId,\n            displayName: user.displayName,\n            pictureUrl: user.pictureUrl,\n            numberPhone: user.numberPhone\n        }).then(function () {\n            dispatch({ type: \"AUTH_STATUS\", payload: true })\n            dispatch({ type: \"CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS\", payload: !control.openSnackbarUpdateNumberSeccuss })\n            // liff.init({ liffId: `${parsed.liff_id}` }).then(async () => {\n            //     await liff.init().closeWindow()\n\n            // }).catch(err => { throw err });\n\n\n        });\n\n    }\n\n    function handleClose() {\n        dispatch({ type: \"CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS\", payload: !control.openSnackbarUpdateNumberSeccuss })\n    }\n\n    React.useEffect(() => {\n        dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n        dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n    }, [window.location.pathname])\n    return (\n        <div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.app}\n            >\n                <Grid item xs={12}>\n                    <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={12}>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                                style={{\n                                    paddingTop: 20\n                                }}\n                            >\n                                <Avatar alt={user.displayName} src={user.pictureUrl} className={classes.avatars} />\n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                            >\n                                <Typography variant=\"h6\" component=\"h6\">\n                                    {user.displayName}\n                                </Typography>\n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                className={classes.layout}\n                                style={{\n                                    paddingTop: 20\n                                }}\n                            >\n                                <label htmlFor=\"phone\">{\"หมายเลขโทรศัพท์ที่ลงทะเบียน:\"}</label>\n                                <NumberPhoneInput type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3} [0-9]{2} [0-9]{3} [0-9]{4}\" placeholder=\"+66 80 123 1234\" value={user.numberPhone} onClick={openDialog}></NumberPhoneInput>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Update}>\n                    {\"เปลี่ยนหมายเลขโทรศัพท์\"}\n                </Button>\n            </AppBar>\n            <DialogChangNumberPhone></DialogChangNumberPhone>\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                open={control.openSnackbarUpdateNumberSeccuss}\n                onClose={handleClose}\n                style={{ backgroundColor: 'white' }}\n                ContentProps={{ style: { backgroundColor: 'white',\n                boxShadow: '0px 3px 5px -1px rgb(0 0 0 / 0%), 0px 6px 10px 0px rgb(0 0 0 / 0%), 0px 1px 18px 0px rgb(0 0 0 / 0%)' } }}\n                TransitionComponent={TransitionDown}\n                autoHideDuration={6000}\n                message={<Alert onClose={handleClose} severity=\"success\">\n                    {`บันทึกหมายเลขโทรศัพท์ ${user.numberPhone}`}\n                </Alert>}\n                key={\"top\" + \"center\"}\n            >\n\n            </Snackbar>\n        </div>\n    )\n};\n\nexport default SettingView;","import React from 'react';\nimport queryString from \"query-string\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Redirect } from \"react-router-dom\"\nimport liff from \"@line/liff\";\nimport { fireStore } from \"../../firebase.config\"\n\nfunction LiffRedirectUriView() {\n    const [loading, setLoading] = React.useState(true);\n    const history = useHistory()\n    const auth = useSelector(state => state.auth);\n    const parsed = queryString.parse(window.location.search);\n    const dispatch = useDispatch();\n    console.log(parsed[\"liff.state\"]);\n    console.log(auth);\n    console.log(history);\n\n    console.log(dispatch);\n\n    React.useEffect(() => {\n        const appRef = fireStore.collection(\"line_apps\");\n        if (sessionStorage.getItem(\"liff_id\")) {\n            liff.init({ liffId: `${sessionStorage.getItem(\"liff_id\")}` }).then(async () => {\n\n                if (liff.isLoggedIn()) {\n                    const getProfile = await liff.getProfile();\n                    console.log(getProfile);\n\n                    const userId = await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).get();\n\n                    if (!userId.exists) {\n                        console.log(\"No such document!\");\n                        dispatch({ type: \"AUTH_STATUS\", payload: false })\n                        dispatch({ type: \"USER_DISPLAY_NAME\", payload: getProfile.displayName });\n                        dispatch({ type: \"USER_ID\", payload: getProfile.userId });\n                        dispatch({ type: \"USER_PICTURE_URL\", payload: getProfile.pictureUrl });\n                        await appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(getProfile.userId).set({ ...getProfile })\n\n                    } else {\n                        console.log(\"Document data:\", userId.data());\n                        console.log(\"getProfile line:\", getProfile);\n                        if (userId.data().numberPhone) {\n                            dispatch({ type: \"AUTH_STATUS\", payload: true })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            dispatch({ type: \"USER_NUMBER_PHONE\", payload: userId.data().numberPhone })\n                            setLoading(false)\n                        } else {\n                            dispatch({ type: \"AUTH_STATUS\", payload: false })\n                            dispatch({ type: \"USER_DISPLAY_NAME\", payload: userId.data().displayName });\n                            dispatch({ type: \"USER_ID\", payload: userId.data().userId });\n                            dispatch({ type: \"USER_PICTURE_URL\", payload: userId.data().pictureUrl });\n                            setLoading(false)\n                        }\n                    }\n                } else {\n                    dispatch({ type: \"AUTH_FIST_PATH\", payload: window.location.pathname })\n\n                    liff.login();\n                    console.log(\"a\");\n                }\n\n            }).catch(err => { throw err });\n        } else {\n            // setLoading(false)\n            console.log(\"b\");\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n        }\n    }, [])\n\n    return (<React.Fragment>\n        {/* <Redirect to={`${parsed[\"liff.state\"]}`} /> */}\n    </React.Fragment>)\n}\n\nexport default LiffRedirectUriView","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogAddAddress() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const address = useSelector(state => state.address);\n    const user = useSelector(state => state.user);\n    const appRef = fireStore.collection(\"line_apps\");\n    const parsed = queryString.parse(window.location.search);\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_ADDRESS\", payload: !control.openDialogAddAddress })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"ADDRESS_ADD_NAME\", payload: event.target.value })\n                break;\n            case \"numberPhone\":\n                dispatch({ type: \"ADDRESS_ADD_NUMBER_PHONE\", payload: event.target.value })\n                break;\n            case \"address\":\n                dispatch({ type: \"ADDRESS_ADD_ADDRESS\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const arr = address.storage;\n\n\n\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").doc();\n        await addressRef.set({\n            id: addressRef.id,\n            name: address.addName,\n            numberPhone: address.addNumbeerPhone,\n            address: address.addAddress\n        }).then(function () {\n            arr.push({\n                id: addressRef.id,\n                name: address.addName,\n                numberPhone: address.addNumbeerPhone,\n                address: address.addAddress\n            })\n\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: arr });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_ADDRESS\", payload: !control.openDialogAddAddress })\n\n\n\n\n        });\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogAddAddress} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เพิ่มที่อยู่จัดส่ง\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ผู้รับ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกชื่อผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"หมายเลขโทรศัพท์มือถือ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกหมายเลขโทรศัพท์มือถือผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"numberPhone\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ที่อยู่จัดส่ง\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    rows={4}\n                                    multiline\n                                    placeholder=\"โปรดกรอกรายละเอียดที่อยู่ เช่นบ้านเลขที่ หมู่บ้าน ถนน เขต ตำบล อำเภอ จังหวัด รหัสไปรษณีย์ \"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"address\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Add}>\n                    {\"บันทึก\"}\n                </Button>\n            </AppBar>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from \"../../firebase.config\"\n\nexport default function DialogDeleteAddress() {\n    const address = useSelector(state => state.address);\n    const control = useSelector(state => state.control);\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    const appRef = fireStore.collection(\"line_apps\");\n    \n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_ADDRESS\", payload: !control.openDialogDeleteAddress })\n    };\n\n    async function Delete() {\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").doc(address.updateId);\n        await addressRef.delete()\n        delete address.storage[address.updateNumber]\n        dispatch({ type: \"ADDRESS_STORAGE\", payload: address.storage });\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_ADDRESS\", payload: !control.openDialogDeleteAddress })\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={control.openDialogDeleteAddress}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"คุณต้องการจะลบที่อยู่จัดส่งนี้!\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ListItem>\n                            <ListItemText\n                                primary={address.updateName}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            color=\"textPrimary\"\n                                        >\n                                            {address.updateNumberPhone}\n                                        </Typography>\n                                        {\" — \" + address.updateAddress}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {\"ยกเลิก\"}\n                    </Button>\n                    <Button onClick={Delete} color=\"primary\" autoFocus >\n                        {\"ยืนยัน\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport DialogDeleteAddress from \"../DialogDeleteAddress\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogUpdateAddress() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const address = useSelector(state => state.address);\n    const user = useSelector(state => state.user);\n\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"ADDRESS_UPDATE_NAME\", payload: event.target.value })\n                break;\n            case \"numberPhone\":\n                dispatch({ type: \"ADDRESS_UPDATE_NUMBER_PHONE\", payload: event.target.value })\n                break;\n            case \"address\":\n                dispatch({ type: \"ADDRESS_UPDATE_ADDRESS\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").doc(address.updateId);\n        await addressRef.set({\n            id: address.updateId,\n            name: address.updateName,\n            numberPhone: address.updateNumberPhone,\n            address: address.updateAddress\n        }).then(function () {\n            address.storage[address.updateNumber].name = address.updateName;\n            address.storage[address.updateNumber].numberPhone = address.updateNumberPhone;\n            address.storage[address.updateNumber].address = address.updateAddress;\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: address.storage });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n\n        });\n    }\n\n    function Delete() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_ADDRESS\", payload: !control.openDialogDeleteAddress })\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogUpdateAddress} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"แก้ไขที่อยู่จัดส่ง\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ผู้รับ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={address.updateName}\n                                    placeholder=\"โปรดกรอกชื่อผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"หมายเลขโทรศัพท์มือถือ\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={address.updateNumberPhone}\n                                    placeholder=\"โปรดกรอกหมายเลขโทรศัพท์มือถือผู้รับ\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"numberPhone\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ที่อยู่จัดส่ง\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    rows={4}\n                                    defaultValue={address.updateAddress}\n                                    multiline\n                                    placeholder=\"โปรดกรอกรายละเอียดที่อยู่ เช่นบ้านเลขที่ หมู่บ้าน ถนน เขต ตำบล อำเภอ จังหวัด รหัสไปรษณีย์ \"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"address\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                >\n                    <Grid item xs={8}>\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#00b900\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Add}>\n                            {\"บันทึก\"}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={4} >\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#f44336\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Delete}>\n                            {\"ลบ\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n            <DialogDeleteAddress></DialogDeleteAddress>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport queryString from \"query-string\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport DialogAddAddress from '../../components/DialogAddAddress'\nimport DialogUpdateAddress from '../../components/DialogUpdateAddress'\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\nfunction TransitionDown(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction AddressView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const address = useSelector(state => state.address);\n    const control = useSelector(state => state.control);\n\n    function openDialogAddAddress() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_ADDRESS\", payload: !control.openDialogAddAddress })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const openDialogUpdateAddress = (prop, number) => (event) => {\n        console.log(prop,number);\n        dispatch({ type: \"ADDRESS_UPDATE_NUMBER\", payload: number })\n        dispatch({ type: \"ADDRESS_UPDATE_ID\", payload: prop.id })\n        dispatch({ type: \"ADDRESS_UPDATE_NAME\", payload: prop.name })\n        dispatch({ type: \"ADDRESS_UPDATE_NUMBER_PHONE\", payload: prop.numberPhone })\n        dispatch({ type: \"ADDRESS_UPDATE_ADDRESS\", payload: prop.address })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_ADDRESS\", payload: !control.openDialogUpdateAddress })\n    }\n\n    function handleClose() {\n        dispatch({ type: \"CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS\", payload: !control.openSnackbarUpdateNumberSeccuss })\n    }\n\n    React.useEffect(() => {\n        const data = [];\n        appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").get().then(snapshot => {\n            snapshot.docs.forEach(hospital => {\n                data.push(hospital.data())\n            });\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: data })\n            dispatch({ type: \"AUTH_FIST_PATH\", payload: sessionStorage.getItem(\"fist_path\") })\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: sessionStorage.getItem(\"liff_id\") })\n        })\n    }, [])\n\n    return (\n        <div style={{ paddingBottom: 70 }}>\n\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{ backgroundColor: \"white\" }}>\n                        {\"ที่อยู่จัดส่ง\"}\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {address.storage.map((data, key) => (\n                    <React.Fragment key={key}>\n                        <Divider></Divider>\n                        <ListItem button onClick={openDialogUpdateAddress(data, key)}>\n                            <ListItemText\n                                primary={data.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {data.numberPhone}\n                                        </Typography>\n                                        {\" — \" + data.address}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    </React.Fragment>\n                ))}\n\n            </List>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={openDialogAddAddress}>\n                    {\"เพิ่มที่อยู่จัดส่ง\"}\n                </Button>\n            </AppBar>\n            <DialogAddAddress></DialogAddAddress>\n            <DialogUpdateAddress></DialogUpdateAddress>\n           \n        </div>\n    )\n};\n\nexport default AddressView;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogAddProduct() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const product = useSelector(state => state.product);\n    const user = useSelector(state => state.user);\n    const appRef = fireStore.collection(\"line_apps\");\n    const parsed = queryString.parse(window.location.search);\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"PRODUCT_ADD_NAME\", payload: event.target.value })\n                break;\n            case \"price\":\n                dispatch({ type: \"PRODUCT_ADD_PRICE\", payload: event.target.value })\n                break;\n            case \"image\":\n                // console.log(event.target.files[0]);\n                var reader = new FileReader();\n                var baseString;\n                reader.onloadend = function () {\n                    baseString = reader.result;\n                    console.log(baseString);\n                    dispatch({ type: \"PRODUCT_ADD_IMAGE\", payload: baseString })\n                };\n                reader.readAsDataURL(event.target.files[0]);\n\n                break;\n            case \"productId\":\n                dispatch({ type: \"PRODUCT_ADD_PRUDUCT_ID\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const arr = product.storage;\n        const addressRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").doc();\n        await addressRef.set({\n            id: addressRef.id,\n            name: product.addName,\n            productId: product.addProductId,\n            price: product.addPrice,\n            image: product.addImage\n        }).then(function () {\n            arr.push({\n                id: addressRef.id,\n                name: product.addName,\n                productId: product.addProductId,\n                price: product.addPrice,\n                image: product.addImage\n            })\n            dispatch({ type: \"PRODUCT_ADD_IMAGE\", payload: \"\" })\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: arr });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n\n\n\n\n        });\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogAddProduct} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เพิ่มสินค้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รหัสสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกรหัสสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"productId\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ชื่อสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกชื่อสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ราคาสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    placeholder=\"โปรดกรอกราคาสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"price\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รูปสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleChange(\"image\")} />\n                                <label htmlFor=\"icon-button-file\">\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Avatar variant=\"rounded\" alt=\"+\" style={{ width: 150, height: 150 }} >\n                                            {product.addImage ? (<React.Fragment>\n                                                <Avatar variant=\"rounded\" alt=\"+\" src={product.addImage} style={{ width: 150, height: 150 }} />\n                                            </React.Fragment>) : (<React.Fragment>\n                                                <ImageSearchIcon style={{\n                                                    fontSize: 80\n                                                }}></ImageSearchIcon>\n                                            </React.Fragment>)}\n\n                                        </Avatar>\n                                    </Grid>\n                                </label>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Add}>\n                    {\"บันทึก\"}\n                </Button>\n            </AppBar>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from \"../../firebase.config\"\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nexport default function DialogDeleteProduct() {\n    const product = useSelector(state => state.product);\n    const control = useSelector(state => state.control);\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    const appRef = fireStore.collection(\"line_apps\");\n\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_PRODUCT\", payload: !control.openDialogDeleteProduct })\n    };\n\n    async function Delete() {\n        const productRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").doc(product.updateId);\n        await productRef.delete()\n        delete product.storage[product.updateNumber]\n        dispatch({ type: \"PRODUCT_STORAGE\", payload: product.storage });\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_PRODUCT\", payload: !control.openDialogDeleteProduct })\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={control.openDialogDeleteProduct}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"คุณต้องการจะลบสินค้านี้!\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" alt=\"Remy Sharp\" src={product.updateImage} style={{\n                                    width: 65,\n                                    height: 65\n                                }} />\n                            </ListItemAvatar>\n                            <ListItem >\n                                <ListItemText\n                                    primary={product.updateProductId}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                color=\"textPrimary\"\n                                            >\n                                                {product.updateName}\n                                            </Typography>\n                                            {\" — \" + product.updatePrice}\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        </ListItem>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {\"ยกเลิก\"}\n                    </Button>\n                    <Button onClick={Delete} color=\"primary\" autoFocus >\n                        {\"ยืนยัน\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport DialogDeleteProduct from \"../DialogDeleteProduct\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogUpdateProduct() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const product = useSelector(state => state.product);\n    const user = useSelector(state => state.user);\n\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n    };\n\n    const handleChange = (prop) => (event) => {\n        switch (prop) {\n            case \"name\":\n                dispatch({ type: \"PRODUCT_UPDATE_NAME\", payload: event.target.value })\n                break;\n            case \"price\":\n                dispatch({ type: \"PRODUCT_UPDATE_PRICE\", payload: event.target.value })\n                break;\n            case \"image\":\n                // console.log(event.target.files[0]);\n                var reader = new FileReader();\n                var baseString;\n                reader.onloadend = function () {\n                    baseString = reader.result;\n                    console.log(baseString);\n                    dispatch({ type: \"PRODUCT_UPDATE_IMAGE\", payload: baseString })\n                };\n                reader.readAsDataURL(event.target.files[0]);\n\n                break;\n            case \"productId\":\n                dispatch({ type: \"PRODUCT_UPDATE_PRUDUCT_ID\", payload: event.target.value })\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    async function Add() {\n        const productRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").doc(product.updateId);\n        await productRef.set({\n            id: product.updateId,\n            name: product.updateName,\n            productId: product.updateProductId,\n            price: product.updatePrice,\n            image: product.updateImage\n        }).then(function () {\n            product.storage[product.updateNumber].name = product.updateName;\n            product.storage[product.updateNumber].productId = product.updateProductId;\n            product.storage[product.updateNumber].price = product.updatePrice;\n            product.storage[product.updateNumber].image = product.updateImage;\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: product.storage });\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n\n        });\n    }\n\n    function Delete() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_DELETE_PRODUCT\", payload: !control.openDialogDeleteProduct })\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogUpdateProduct} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"แก้ไขสินค้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รหัสสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updateProductId}\n                                    placeholder=\"โปรดกรอกรหัสสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"productId\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ชื่อสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updateName}\n                                    placeholder=\"โปรดกรอกชื่อสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"name\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"ราคาสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <InputBase\n                                    defaultValue={product.updatePrice}\n                                    placeholder=\"โปรดกรอกราคาสินค้า\"\n                                    style={{ width: '100%' }}\n                                    onChange={handleChange(\"price\")}></InputBase>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n            <React.Fragment>\n                <ListItem button>\n                    <ListItemText\n                        primary={<Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            // className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {\"รูปสินค้า\"}\n                        </Typography>}\n                        secondary={\n                            <React.Fragment>\n                                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleChange(\"image\")} />\n                                <label htmlFor=\"icon-button-file\">\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Avatar variant=\"rounded\" alt=\"+\" style={{ width: 150, height: 150 }} >\n                                            {product.updateImage ? (<React.Fragment>\n                                                <Avatar variant=\"rounded\" alt=\"+\" src={product.updateImage} style={{ width: 150, height: 150 }} />\n                                            </React.Fragment>) : (<React.Fragment>\n                                                <ImageSearchIcon style={{\n                                                    fontSize: 80\n                                                }}></ImageSearchIcon>\n                                            </React.Fragment>)}\n\n                                        </Avatar>\n                                    </Grid>\n                                </label>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <Divider></Divider>\n            </React.Fragment>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                >\n                    <Grid item xs={8}>\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#00b900\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Add}>\n                            {\"บันทึก\"}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={4} >\n                        <Button\n                            variant=\"contained\"\n                            style={{\n                                fontSize: '1em',\n                                backgroundColor: \"#f44336\",\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                width: '100%'\n                            }} onClick={Delete}>\n                            {\"ลบ\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n            <DialogDeleteProduct></DialogDeleteProduct>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport DialogAddProduct from '../../components/DialogAddProduct'\nimport DialogUpdateProduct from '../../components/DialogUpdateProduct'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    }\n}));\n\n// function TransitionDown(props) {\n//     return <Slide {...props} direction=\"down\" />;\n// }\n\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nfunction AddProductView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    // const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const product = useSelector(state => state.product);\n    const control = useSelector(state => state.control);\n\n    function openDialogAddProduct() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_ADD_PRODUCT\", payload: !control.openDialogAddProduct })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const openDialogUpdateProduct = (prop, number) => (event) => {\n        console.log(prop, number);\n        dispatch({ type: \"PRODUCT_UPDATE_NUMBER\", payload: number })\n        dispatch({ type: \"PRODUCT_UPDATE_ID\", payload: prop.id })\n        dispatch({ type: \"PRODUCT_UPDATE_NAME\", payload: prop.name })\n        dispatch({ type: \"PRODUCT_UPDATE_PRUDUCT_ID\", payload: prop.productId })\n        dispatch({ type: \"PRODUCT_UPDATE_PRICE\", payload: prop.price })\n        dispatch({ type: \"PRODUCT_UPDATE_IMAGE\", payload: prop.image })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n    }\n\n    React.useEffect(() => {\n        const data = [];\n        appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").get().then(snapshot => {\n            snapshot.docs.forEach(hospital => {\n                data.push(hospital.data())\n            });\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: data })\n            dispatch({ type: \"AUTH_FIST_PATH\", payload: sessionStorage.getItem(\"fist_path\") })\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: sessionStorage.getItem(\"liff_id\") })\n        })\n    }, [])\n\n    return (\n        <div style={{ paddingBottom: 70 }}>\n\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{ backgroundColor: \"white\" }}>\n                        {\"สินค้า\"}\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {product.storage.map((data, key) => (\n                    <React.Fragment key={key}>\n\n                        <ListItem alignItems=\"flex-start\">\n                            <Divider></Divider>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" alt=\"Remy Sharp\" src={data.image} style={{\n                                    width: 65,\n                                    height: 65\n                                }} />\n                            </ListItemAvatar>\n                            <ListItem button onClick={openDialogUpdateProduct(data, key)}>\n                                <ListItemText\n                                    primary={data.productId}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={classes.inline}\n                                                color=\"textPrimary\"\n                                            >\n                                                {data.name}\n                                            </Typography>\n                                            {\" — \" + data.price}\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </React.Fragment>\n                ))}\n\n            </List>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={openDialogAddProduct}>\n                    {\"เพิ่มสินค้า\"}\n                </Button>\n            </AppBar>\n            <DialogAddProduct></DialogAddProduct>\n            <DialogUpdateProduct></DialogUpdateProduct>\n        </div>\n    )\n};\n\nexport default AddProductView;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogListOrder() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const order = useSelector(state => state.order);\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_LIST_ORDER\", payload: !control.openDialogListOrder })\n    };\n\n\n    const DeleteItem = (prop, key) => (event) => {\n        console.log(prop, key);\n        delete order.storage[key];\n        dispatch({ type: \"ORDER_STORAGE\", payload: order.storage })\n        dispatch({ type: \"ORDER_LENGTH\", payload: order.storage.length }) \n        console.log(order.length);\n    }\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogListOrder} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"ตระกร้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            {order.storage.map((data, key) => (\n                <React.Fragment key={key}>\n\n                    <ListItem alignItems=\"flex-start\">\n                        <Divider></Divider>\n                        <ListItemAvatar>\n                            <Avatar variant=\"rounded\" alt=\"Remy Sharp\" src={data.image} style={{\n                                width: 65,\n                                height: 65\n                            }} />\n                        </ListItemAvatar>\n                        <ListItem button >\n                            <ListItemText\n                                primary={data.productId}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {data.name}\n                                        </Typography>\n                                        {\" — \" + data.price}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <IconButton aria-label=\"delete\" onClick={DeleteItem(data, key)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </React.Fragment>\n            ))}\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nfunction DialogBuyProduct() {\n    const order = useSelector(state => state.order)\n    const control = useSelector(state => state.control)\n    const user = useSelector(state => state.user)\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const appRef = fireStore.collection(\"line_apps\");\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_SUM_ORDER\", payload: !control.openDialogSumOrder })\n    };\n\n    async function Buy() {\n        const orderRef = appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"orders\").doc();\n        await orderRef.set({\n            id: orderRef.id,\n            product: order.storage,\n            user: user,\n            address: order.address\n        }).then(function () {\n\n\n            dispatch({ type: \"CONTROL_OPEN_DIALOG_SUM_ORDER\", payload: !control.openDialogSumOrder })\n            dispatch({ type: \"ORDER_ADDRESS\", payload: null })\n            dispatch({ type: \"ORDER_STORAGE\", payload: [] })\n\n\n\n\n        });\n\n    }\n\n    function amount(item) {\n        return parseInt(item.price);\n    }\n\n    function sum(prev, next) {\n        return prev + next;\n    }\n    React.useEffect(() => {\n        console.log(order.storage.length);\n\n    })\n\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogSumOrder} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"สรุปยอดสินค้า\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <div style={{\n                paddingBottom: 150\n            }}>\n                {order.storage.map((data, key) => (\n                    <React.Fragment key={key}>\n\n                        <ListItem alignItems=\"flex-start\">\n                            <Divider></Divider>\n\n                            <ListItem  >\n                                <ListItemText\n                                    primary={key + 1}\n\n                                />\n                            </ListItem>\n                            <ListItem  >\n                                <ListItemText\n                                    primary={data.name}\n\n                                />\n                            </ListItem>\n                            <ListItem  >\n                                <ListItemText\n                                    primary={data.price + \" บาท\"}\n\n                                />\n                            </ListItem>\n                        </ListItem>\n                        <Divider />\n                    </React.Fragment>\n                ))}\n                <ListItem alignItems=\"flex-start\">\n                    <ListItem  >\n                        <ListItemText\n                            primary={\"รวม\"}\n\n                        />\n                    </ListItem>\n                    <ListItem  >\n                        <ListItemText\n                            primary={order.storage.length === 0 ? 0 : order.storage.map(amount).reduce(sum) + \" บาท\"}\n\n                        />\n                    </ListItem>\n                </ListItem>\n                <Divider />\n                <List\n                    component=\"nav\"\n                    aria-labelledby=\"nested-list-subheader\"\n                    subheader={\n                        <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{ backgroundColor: \"white\" }}>\n                            {\"ที่อยู่จัดส่ง\"}\n                        </ListSubheader>\n                    }\n                    className={classes.root}\n                >\n                    {order.address ? (<ListItem button >\n                        <ListItemText\n                            primary={order.address.name}\n                            secondary={\n                                <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        {order.address.numberPhone}\n                                    </Typography>\n                                    {\" — \" + order.address.address}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    ) : (<React.Fragment></React.Fragment>)}\n\n                </List>\n            </div>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Buy}>\n                    {\"สั่งเลย\"}\n                </Button>\n            </AppBar>\n        </Dialog>\n    );\n}\n\nexport default DialogBuyProduct","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NumberPhoneInput from '../NumberPhoneInput';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fireStore } from '../../firebase.config'\nimport queryString from \"query-string\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DialogBuyProduct from '../DialogBuyProduct'\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#7d8690\",\n    },\n    appBarBottom: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    title: {\n        // marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogSelectAddress() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const control = useSelector(state => state.control);\n    const address = useSelector(state => state.address);\n    const user = useSelector(state => state.user);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const handleClose = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_SELECT_ADDRESS\", payload: !control.openDialogSelectAddress })\n    };\n\n\n    async function Next() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_SUM_ORDER\", payload: true })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_SELECT_ADDRESS\", payload: false })\n    }\n\n    const handleListItemClick = (event, index, data) => {\n        setSelectedIndex(index);\n        dispatch({ type: \"ORDER_ADDRESS\", payload: data })\n        console.log(index, data);\n    };\n\n    React.useEffect(() => {\n        const data = [];\n        appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"address\").get().then(snapshot => {\n            snapshot.docs.forEach(hospital => {\n                data.push(hospital.data())\n            });\n            dispatch({ type: \"ADDRESS_STORAGE\", payload: data })\n            dispatch({ type: \"AUTH_FIST_PATH\", payload: sessionStorage.getItem(\"fist_path\") })\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: sessionStorage.getItem(\"liff_id\") })\n        })\n    }, [])\n\n    return (\n\n        <Dialog fullScreen open={control.openDialogSelectAddress} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {\"เลือกที่อยู่จัดส่ง\"}\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{ backgroundColor: \"white\" }}>\n                        {\"ที่อยู่จัดส่ง\"}\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {address.storage.map((data, key) => (\n                    <React.Fragment key={key}>\n                        <Divider></Divider>\n                        <ListItem selected={selectedIndex === key} button onClick={(event) => handleListItemClick(event, key, data)}>\n                            <ListItemText\n                                primary={data.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {data.numberPhone}\n                                        </Typography>\n                                        {\" — \" + data.address}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    </React.Fragment>\n                ))}\n\n            </List>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={Next}>\n                    {\"เลือกที่จัดส่ง\"}\n                </Button>\n            </AppBar>\n       \n        </Dialog>\n    );\n}\n","import React from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fireStore } from '../../firebase.config';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DialogAddProduct from '../../components/DialogAddProduct'\nimport DialogUpdateProduct from '../../components/DialogUpdateProduct'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListItem from '@material-ui/core/ListItem';\nimport { ButtonBase } from '@material-ui/core';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport DialogListOrder from '../../components/DialogListOrder'\nimport DialogSelectAddress from '../../components/DialogSelectAddress'\nimport DialogBuyProduct from '../../components/DialogBuyProduct'\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        right: -3,\n        top: 13,\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px',\n    },\n}))(Badge);\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatars: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        backgroundColor: 'white',\n        padding: 15,\n    },\n    layout: {\n        padding: \"10px 0px\"\n    },\n    app: {\n        height: 450\n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n// function TransitionDown(props) {\n//     return <Slide {...props} direction=\"down\" />;\n// }\n\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nfunction ProductView() {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const [onLength, setLength] = React.useState(0)\n    // const parsed = queryString.parse(window.location.search);\n    const user = useSelector(state => state.user);\n    const product = useSelector(state => state.product);\n    const control = useSelector(state => state.control);\n    const order = useSelector(state => state.order);\n\n    function openDialogSelectAddress() {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_SELECT_ADDRESS\", payload: !control.openDialogSelectAddress })\n    }\n    const appRef = fireStore.collection(\"line_apps\");\n\n    const openDialogUpdateProduct = (prop, number) => (event) => {\n        console.log(prop, number);\n        dispatch({ type: \"PRODUCT_UPDATE_NUMBER\", payload: number })\n        dispatch({ type: \"PRODUCT_UPDATE_ID\", payload: prop.id })\n        dispatch({ type: \"PRODUCT_UPDATE_NAME\", payload: prop.name })\n        dispatch({ type: \"PRODUCT_UPDATE_PRUDUCT_ID\", payload: prop.productId })\n        dispatch({ type: \"PRODUCT_UPDATE_PRICE\", payload: prop.price })\n        dispatch({ type: \"PRODUCT_UPDATE_IMAGE\", payload: prop.image })\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_UPDATE_PRODUCT\", payload: !control.openDialogUpdateProduct })\n    }\n\n    const getOrder = (prop, key) => (event) => {\n        order.storage.push(prop)\n        dispatch({ type: \"ORDER_STORAGE\", payload: order.storage })\n        dispatch({ type: \"ORDER_LENGTH\", payload: order.storage.length })\n        setLength(order.storage.length)\n    }\n\n    const openDialogListOrder = () => {\n        dispatch({ type: \"CONTROL_OPEN_DIALOG_LIST_ORDER\", payload: !control.openDialogListOrder })\n    };\n\n\n    React.useEffect(() => {\n        const data = [];\n        appRef.doc(sessionStorage.getItem(\"liff_id\")).collection(\"users\").doc(user.userId).collection(\"products\").get().then(snapshot => {\n            snapshot.docs.forEach(hospital => {\n                data.push(hospital.data())\n            });\n            dispatch({ type: \"PRODUCT_STORAGE\", payload: data })\n            dispatch({ type: \"AUTH_FIST_PATH\", payload: sessionStorage.getItem(\"fist_path\") })\n            dispatch({ type: \"AUTH_LIFF_ID\", payload: sessionStorage.getItem(\"liff_id\") })\n        })\n        setLength(order.storage.length)\n    }, [order.storage])\n\n    return (\n        <div style={{ paddingBottom: 70 }}>\n\n            <GridList className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\">{\"สินค้า\"} <IconButton style={{ float: 'right' }} aria-label=\"cart\" onClick={openDialogListOrder}>\n                        <StyledBadge badgeContent={order.length} color=\"secondary\" >\n                            <ShoppingCartIcon />\n                        </StyledBadge>\n                    </IconButton></ListSubheader>\n\n                </GridListTile>\n                {product.storage.map((data, key) => (\n\n                    <GridListTile key={key} component=\"a\" onClick={getOrder(data, key)}>\n                        {/* <div style={{\n                            textAlign: 'end',\n                            color: '#35b900',\n                        }}>\n                            <Typography variant=\"h6\">{0}</Typography>\n                        </div> */}\n\n                        <img src={data.image} alt={data.name} />\n\n                        <GridListTileBar\n                            title={data.name}\n                            subtitle={<span>id: {data.productId}</span>}\n                            actionIcon={\n                                <Typography variant=\"h6\" style={{ color: 'white' }}>{`${data.price} `}<span style={{ fontSize: 15 }}>บาท</span></Typography>\n                            }\n                        />\n                    </GridListTile>\n\n                ))}\n\n            </GridList>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Button variant=\"contained\" style={{ fontSize: '1em', backgroundColor: \"#00b900\", color: \"#fff\", fontWeight: \"bold\" }} onClick={openDialogSelectAddress}>\n                    {\"ซื้อ\"}\n                </Button>\n            </AppBar>\n            <DialogListOrder></DialogListOrder>\n            <DialogSelectAddress></DialogSelectAddress>\n            <DialogBuyProduct></DialogBuyProduct>\n        </div >\n    )\n};\n\nexport default ProductView;","import React from \"react\";\nimport \"./App.css\";\nimport liff from \"@line/liff\";\nimport {\n  makeStyles\n} from \"@material-ui/core/styles\";\nimport Loading from \"./components/Loading\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n// import { fireStore } from \"./firebase.config\"\nimport queryString from \"query-string\";\nimport NotFoundLIFFIDView from \"./views/NotFoundLIFFIDView\"\nimport SetupView from \"./views/SetupView\"\nimport SettingView from \"./views/SettingView\"\nimport LiffRedirectUriView from \"./views/LiffRedirectUriView\"\nimport AddressView from \"./views/AddressView\"\nimport AddProductView from \"./views/AddProductView\"\nimport ProductView from \"./views/ProductView\"\n\nconst useStyles = makeStyles((theme) => ({\n  avatars: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"white\",\n    padding: 15,\n  },\n  layout: {\n    padding: \"10px 0px\"\n  },\n  app: {\n    height: 450\n  }\n}));\n\nfunction RunView(props) {\n  const auth = useSelector(state => state.auth);\n  const parsed = queryString.parse(window.location.search);\n  console.log(auth.liff_id);\n  return (\n    <React.Fragment>\n      {auth.liff_id ? (<React.Fragment>\n        {auth.status ? (\n          <React.Fragment>\n            {props.children}\n          </React.Fragment>\n        ) : (\n            <React.Fragment>\n              <Redirect to={`/setup?liff_id=${parsed.liff_id}&pathname=${window.location.pathname}`} />\n            </React.Fragment>\n          )}\n      </React.Fragment>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n\n    </React.Fragment>\n  )\n}\n\nfunction App() {\n  const [loading, setLoading] = React.useState(true);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const parsed = queryString.parse(window.location.search);\n  const auth = useSelector(state => state.auth);\n\n  React.useEffect(() => {\n    if (parsed.liff_id) {\n      sessionStorage.setItem(\"liff_id\", parsed.liff_id);\n      sessionStorage.setItem(\"fist_path\", window.location.pathname);\n      dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n      dispatch({ type: \"AUTH_STATUS\", payload: auth.status })\n      setLoading(false)\n    } else {\n      setLoading(false)\n      dispatch({ type: \"AUTH_LIFF_ID\", payload: parsed.liff_id })\n    }\n  }, [])\n\n\n  return (\n    <div className={classes.app}>\n      {loading ? (\n        <Loading></Loading>\n      ) : (<React.Fragment>\n        <Router>\n          <TransitionGroup>\n            <CSSTransition\n              key={window.location.key}\n              classNames=\"fade\"\n              timeout={300}\n            >\n              <Switch>\n                <Route exact path={`/`}>\n                  {sessionStorage.getItem(\"liff_id\") ? (<LiffRedirectUriView></LiffRedirectUriView>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n\n                </Route>\n                <Route path={`/setup`}>\n                  {sessionStorage.getItem(\"liff_id\") ? (<SetupView></SetupView>) : (<NotFoundLIFFIDView></NotFoundLIFFIDView>)}\n                </Route>\n\n                <Route path={`/setting`}>\n                  <RunView>\n                    <SettingView></SettingView>\n                  </RunView>\n                </Route>\n                <Route path={`/address`}>\n                  <RunView>\n                    <AddressView></AddressView>\n                  </RunView>\n                </Route>\n                <Route path={`/add_product`}>\n                  <RunView>\n                    <AddProductView></AddProductView>\n                  </RunView>\n                </Route>\n                <Route path={`/products`}>\n                  <RunView>\n                    <ProductView></ProductView>\n                  </RunView>\n                </Route>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </Router>\n      </React.Fragment>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//Reducer for character information Initialize State\nconst initState = {\n    userId:\"\",\n    displayName: \"\",\n    pictureUrl: \"\",\n    numberPhone: \"\"\n}\n\n//Define Actions\nconst userReducer = (state = initState, action) => {\n    switch (action.type) {\n        //Change character name\n        case 'USER_DISPLAY_NAME':\n            return {\n                ...state,\n                displayName: action.payload\n            }\n\n        case 'USER_ID':\n            return {\n                ...state,\n                userId: action.payload\n            }\n        case 'USER_PICTURE_URL':\n            return {\n                ...state,\n                pictureUrl: action.payload\n            }\n        case 'USER_NUMBER_PHONE':\n            return {\n                ...state,\n                numberPhone: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer;","const initState = {\n  openDialogChangNumber: false,\n  openSnackbarUpdateNumberSeccuss: false,\n  openDialogAddAddress: false,\n  openDialogUpdateAddress: false,\n  openDialogDeleteAddress: false,\n  openDialogUpdateProduct: false,\n  openDialogAddProduct: false,\n  openDialogDeleteProduct: false,\n  openDialogListOrder: false,\n  openDialogSelectAddress: false,\n  openDialogSumOrder: false,\n}\n\nconst controlReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CONTROL_OPEN_DIALOG_CHANG_NUMBER_PHONE':\n      return {\n        ...state,\n        openDialogChangNumber: action.payload\n      }\n    case 'CONTROL_OPEN_SNACKBARK_UPDATE_NUMBER_PHONE_SECCUSS':\n      return {\n        ...state,\n        openSnackbarUpdateNumberSeccuss: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_ADD_ADDRESS':\n      return {\n        ...state,\n        openDialogAddAddress: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_ADD_PRODUCT':\n      return {\n        ...state,\n        openDialogAddProduct: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_UPDATE_ADDRESS':\n      return {\n        ...state,\n        openDialogUpdateAddress: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_UPDATE_PRODUCT':\n      return {\n        ...state,\n        openDialogUpdateProduct: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_DELETE_ADDRESS':\n      return {\n        ...state,\n        openDialogDeleteAddress: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_DELETE_PRODUCT':\n      return {\n        ...state,\n        openDialogDeleteProduct: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_LIST_ORDER':\n      return {\n        ...state,\n        openDialogListOrder: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_SELECT_ADDRESS':\n      return {\n        ...state,\n        openDialogSelectAddress: action.payload\n      }\n    case 'CONTROL_OPEN_DIALOG_SUM_ORDER':\n      return {\n        ...state,\n        openDialogSumOrder: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default controlReducer;","const initState = {\n    todoList: [\n        {\n            id: 1,\n            content: 'Play video game'\n        }, {\n            id: 2,\n            content: 'Learn nodejs & python'\n        }, {\n            id: 3,\n            content: 'Join meetup event'\n        }\n    ]\n}\n\nconst todoReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return {\n                ...state,\n                todoList: [\n                    ...state.todoList,\n                    action.payload\n                ]\n            }\n        case 'REMOVE_TODO':\n            return {\n                ...state,\n                todoList: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default todoReducer;","//Reducer for character information Initialize State\nconst initState = {\n    status: false\n}\n\n//Define Actions\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        //Change character name\n        case 'AUTH_STATUS':\n            return {\n                ...state,\n                status: action.payload\n            }\n        case 'AUTH_LIFF_ID':\n            return {\n                ...state,\n                liff_id: action.payload\n            }\n        case 'AUTH_FIST_PATH':\n            return {\n                ...state,\n                fistPath: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","//Reducer for character information Initialize State\nconst initState = {\n    addName: \"\",\n    addNumbeerPhone: \"\",\n    addAddress: \"\",\n    updateNumber: 0,\n    updateId: \"\",\n    updateName: \"\",\n    updateNumberPhone: \"\",\n    updateAddress: \"\",\n    storage: []\n}\n\n//Define Actions\nconst addressReducer = (state = initState, action) => {\n    switch (action.type) {\n        //Change character name\n        case 'ADDRESS_ADD_NAME':\n            return {\n                ...state,\n                addName: action.payload\n            }\n\n        case 'ADDRESS_ADD_NUMBER_PHONE':\n            return {\n                ...state,\n                addNumbeerPhone: action.payload\n            }\n        case 'ADDRESS_ADD_ADDRESS':\n            return {\n                ...state,\n                addAddress: action.payload\n            }\n        case 'ADDRESS_UPDATE_NAME':\n            return {\n                ...state,\n                updateName: action.payload\n            }\n        case 'ADDRESS_UPDATE_NUMBER_PHONE':\n            return {\n                ...state,\n                updateNumberPhone: action.payload\n            }\n        case 'ADDRESS_UPDATE_ADDRESS':\n            return {\n                ...state,\n                updateAddress: action.payload\n            }\n        case 'ADDRESS_UPDATE_NUMBER':\n            return {\n                ...state,\n                updateNumber: action.payload\n            }\n        case 'ADDRESS_UPDATE_ID':\n            return {\n                ...state,\n                updateId: action.payload\n            }\n        case 'ADDRESS_STORAGE':\n            return {\n                ...state,\n                storage: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default addressReducer;","//Reducer for character information Initialize State\nconst initState = {\n    addName: \"\",\n    addProductId: \"\",\n    addId: \"\",\n    addPrice: 0,\n    addImage: \"\",\n    updateName: \"\",\n    updateProductId: \"\",\n    updateId: \"\",\n    updatePrice: 0,\n    updateImage: \"\",\n    updateNumber: 0,\n    storage: []\n}\n\n//Define Actions\nconst productReducer = (state = initState, action) => {\n    switch (action.type) {\n        //Change character name\n        case 'PRODUCT_ADD_NAME':\n            return {\n                ...state,\n                addName: action.payload\n            }\n\n        case 'PRODUCT_ADD_PRUDUCT_ID':\n            return {\n                ...state,\n                addProductId: action.payload\n            }\n        case 'PRODUCT_ADD_ID':\n            return {\n                ...state,\n                addId: action.payload\n            }\n        case 'PRODUCT_ADD_PRICE':\n            return {\n                ...state,\n                addPrice: action.payload\n            }\n        case 'PRODUCT_ADD_IMAGE':\n            return {\n                ...state,\n                addImage: action.payload\n            }\n        case 'PRODUCT_UPDATE_NAME':\n            return {\n                ...state,\n                updateName: action.payload\n            }\n\n        case 'PRODUCT_UPDATE_PRUDUCT_ID':\n            return {\n                ...state,\n                updateProductId: action.payload\n            }\n        case 'PRODUCT_UPDATE_ID':\n            return {\n                ...state,\n                updateId: action.payload\n            }\n        case 'PRODUCT_UPDATE_PRICE':\n            return {\n                ...state,\n                updatePrice: action.payload\n            }\n        case 'PRODUCT_UPDATE_IMAGE':\n            return {\n                ...state,\n                updateImage: action.payload\n            }\n        case 'PRODUCT_UPDATE_NUMBER':\n            return {\n                ...state,\n                updateNumber: action.payload\n            }\n        case 'PRODUCT_STORAGE':\n            return {\n                ...state,\n                storage: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default productReducer;","//Reducer for character information Initialize State\nconst initState = {\n    storage: [],\n    length:0\n}\n\n//Define Actions\nconst Reducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ORDER_STORAGE':\n            return {\n                ...state,\n                storage: action.payload\n            }\n        case 'ORDER_LENGTH':\n            console.log(action.payload);\n            return {\n                ...state,\n                length: action.payload\n            }\n            case 'ORDER_ADDRESS':\n            console.log(action.payload);\n            return {\n                ...state,\n                address: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default Reducer;","import userReducer from './userReducer';\nimport controlReducer from './controlReducer';\nimport todoReducer from './todoReducer';\nimport authReducer from './authReducer';\nimport addressReducer from './addressReducer';\nimport productReducer from './productReducer';\nimport orderReducer from './orderReducer';\nimport { combineReducers } from 'redux';\n\n//Combine all the sub reducers\nconst rootReducer = combineReducers({\n    user: userReducer,\n    control: controlReducer,\n    todos: todoReducer,\n    auth: authReducer,\n    address: addressReducer,\n    product: productReducer,\n    order: orderReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n<Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}